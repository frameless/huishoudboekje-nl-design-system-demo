version: "3.8"

x-backend: &x-backend
  build:
    dockerfile: ./backend/dev.Dockerfile
    context: .
  volumes:
    - ./backend:/app

x-backend-burgers: &x-backend-burgers
  build:
    dockerfile: ./dev.Dockerfile
    context: ./backend-burgers
  volumes:
    - ./backend-burgers:/app

x-huishoudboekjeservice: &x-huishoudboekjeservice
  build:
    dockerfile: ./huishoudboekje_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/huishoudboekje_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/huishoudboekjeservice"

x-organisatieservice: &x-organisatieservice
  build:
    dockerfile: ./organisatie_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/organisatie_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/organisatieservice"

x-grootboekservice: &x-grootboekservice
  build:
    dockerfile: ./grootboek_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/grootboek_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/grootboekservice"

x-banktransactieservice: &x-banktransactieservice
  build:
    dockerfile: ./bank_transactie_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/bank_transactie_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/banktransactieservice"

x-logservice: &x-logservice
  build:
    dockerfile: ./log_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/log_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/logservice"

x-postadressenservice: &x-postadressenservice
  build:
    context: ./services/postadressenservice
    dockerfile: ./dev.Dockerfile
  volumes:
    - ./services/postadressenservice:/app
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/postadressenservice"

x-alarmenservice: &x-alarmenservice
  build:
    context: ./services/alarmenservice
    dockerfile: ./dev.Dockerfile
  volumes:
    - ./services/alarmenservice:/app
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/alarmenservice"

x-signalenservice: &x-signalenservice
  build:
    context: ./services/signalenservice
    dockerfile: ./dev.Dockerfile
  volumes:
    - ./services/signalenservice:/app
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/signalenservice"

x-unleashservice: &x-unleashservice
  build:
    context: ./services/unleashservice
    dockerfile: ./dev.Dockerfile
  volumes:
    - ./services/unleashservice:/app

x-rapportageservice: &x-rapportageservice
  build:
    dockerfile: ./rapportage_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/rapportage_service:/app
    - ./services/core_service/core_service:/app/core_service

x-py-tests: &x-py-tests
  profiles:
    - tests
  command:
    - /bin/sh
    - -c
    - pytest tests --disable-pytest-warnings
  environment:
    JWT_AUDIENCE: pytest
    JWT_ISSUER: pytest
    JWT_ALGORITHMS: HS256
    JWT_SECRET: pytestsecret

x-js-tests: &x-js-tests
  profiles:
    - tests
  entrypoint:
    - /bin/sh
    - -c
    - npm test

services:
  # Database
  db:
    container_name: database
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    command: [ "postgres", "-c", "log_statement=all" ]
    restart: unless-stopped

  # Database preparations
  db-init:
    container_name: database_init
    image: postgres:13-alpine
    command:
      - /bin/sh
      - -c
      - >-
        export PGPASSWORD=postgres &&
        psql -h db -U postgres -c "CREATE USER hhb WITH PASSWORD 'hhb'" || true &&
        psql -h db -U postgres -c "ALTER USER hhb WITH SUPERUSER" || true &&
        psql -h db -U postgres -c "CREATE DATABASE huishoudboekjeservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE organisatieservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE banktransactieservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE grootboekservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE logservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE postadressenservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE alarmenservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE signalenservice" || true
    profiles:
      - db
    depends_on:
      - db

  sampledata:
    image: registry.gitlab.com/commonground/huishoudboekje/data-importer/data-importer:1.5.4
    container_name: sampledata
    environment:
      GRAPHQL_API_URL: http://backend:8000/graphql
      LOG_LEVEL: INFO
    command: ["importer", "import"]
    volumes:
      - ./sampleData:/app/data
    profiles:
      - sampledata

  authservice:
    build:
      dockerfile: ./dev.Dockerfile
      context: ./services/authservice
    container_name: authservice
    volumes:
      - ./services/authservice:/app
    environment:
      NODE_ENV: development
      LOG_LEVEL: DEBUG
      OIDC_ISSUER_URL: https://keycloak.huishoudboekje.demoground.nl/realms/huishoudboekje/
      OIDC_CLIENT_ID: huishoudboekje-medewerkers
      OIDC_CLIENT_SECRET: fc36d31f-f720-4914-a750-b83c7b0dd61c
      OIDC_BASE_URL: http://localhost:3000
      JWT_ISSUER: huishoudboekje-localhost
      JWT_AUDIENCE: huishoudboekje-medewerkers
      JWT_EXPIRES_IN: 30d
      JWT_SECRET: testtest
    ports:
      - 4000:8080
    profiles:
      - authservice

  backend:
    <<: *x-backend
    container_name: backend
    environment:
      PREFIX: /api
      LOG_LEVEL: DEBUG
      REQUIRE_AUTH: 0
      JWT_AUDIENCE: Account
      JWT_SECRET: testtest
      JWT_ISSUER: localhost
      JWT_ALGORITHMS: HS256
      HHB_SERVICE_URL: "http://huishoudboekjeservice:8000"
      ORGANISATIE_SERVICE_URL: "http://organisatieservice:8000"
      TRANSACTIE_SERVICE_URL: "http://banktransactieservice:8000"
      GROOTBOEK_SERVICE_URL: "http://grootboekservice:8000"
      LOG_SERVICE_URL: "http://logservice:8000"
      POSTADRESSENSERVICE_URL: "http://postadressenservice:8080"
      ALARMENSERVICE_URL: "http://alarmenservice:8080"
      SIGNALENSERVICE_URL: "http://signalenservice:8080"
      UNLEASHSERVICE_URL: "http://unleashservice:8080"
      USE_GRAPHIQL: 1
      ALLOW_INTROSPECTION: 1
    ports:
      - 5000:8000

  backend-test:
    <<: [ *x-py-tests, *x-backend ]

  backend-burgers:
    <<: *x-backend-burgers
    container_name: backend-burgers
    environment:
      HUISHOUDBOEKJESERVICE_URL: "http://huishoudboekjeservice:8000"
      ORGANISATIESERVICE_URL: "http://organisatieserviceservice:8000"
      BANKTRANSACTIESERVICE_URL: "http://banktransactieserviceservice:8000"
    ports:
      - 5001:8080
    profiles:
      - burgers

  backend-burgers-test:
    <<: *x-backend-burgers
    profiles:
      - tests
    entrypoint:
      - /bin/sh
      - -c
      - npm run test

  huishoudboekjeservice:
    <<: *x-huishoudboekjeservice
    container_name: huishoudboekjeservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/huishoudboekjeservice"
      LOG_LEVEL: DEBUG
    ports:
      - 8001:8000
    depends_on:
      - db

  huishoudboekjeservice-test:
    <<: [ *x-py-tests, *x-huishoudboekjeservice ]

  organisatieservice:
    <<: *x-organisatieservice
    container_name: organisatieservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/organisatieservice"
      LOG_LEVEL: DEBUG
    ports:
      - 8002:8000
    depends_on:
      - db

  organisatieservice-test:
    <<: [ *x-py-tests, *x-organisatieservice ]

  banktransactieservice:
    <<: *x-banktransactieservice
    container_name: banktransactieservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/banktransactieservice"
      LOG_LEVEL: DEBUG
    ports:
      - 8003:8000
    depends_on:
      - db

  banktransactieservice-test:
    <<: [ *x-py-tests, *x-banktransactieservice ]

  grootboekservice:
    <<: *x-grootboekservice
    container_name: grootboekservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/grootboekservice"
      LOG_LEVEL: DEBUG
    ports:
      - 8004:8000
    depends_on:
      - db

  grootboekservice-test:
    <<: [ *x-py-tests, *x-grootboekservice ]

  logservice:
    <<: *x-logservice
    container_name: logservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/logservice"
      LOG_LEVEL: DEBUG
    ports:
      - 8012:8000
    depends_on:
      - db

  logservice-test:
    <<: [ *x-py-tests, *x-logservice ]

  # Trail of history: port 8006 used to be in use by the contactcatalogus, but we deprecated this service in favor of the postadressenservice.

  postadressenservice:
    <<: *x-postadressenservice
    container_name: postadressenservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/postadressenservice?connect_timeout=300"
      LOG_LEVEL: DEBUG
    ports:
      - 8007:8080
    depends_on:
      - db

  postadressenservice-test:
    <<: [ *x-js-tests, *x-postadressenservice ]

  alarmenservice:
    <<: *x-alarmenservice
    container_name: alarmenservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/alarmenservice?connect_timeout=300"
      LOG_LEVEL: DEBUG
    ports:
      - 8008:8080
    depends_on:
      - db

  alarmenservice-test:
    <<: [ *x-js-tests, *x-alarmenservice ]

  signalenservice:
    <<: *x-signalenservice
    container_name: signalenservice 
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/signalenservice?connect_timeout=300"
      LOG_LEVEL: DEBUG
    ports:
      - 8009:8080
    depends_on:
      - db

  signalenservice-test:
    <<: [ *x-js-tests, *x-signalenservice ]

  unleashservice:
    <<: *x-unleashservice
    container_name: unleashservice
    environment:
      LOG_LEVEL: DEBUG
    ports:
      - 8010:8080

  rapportageservice:
    <<: *x-rapportageservice
    container_name: rapportageservice
    environment:
      LOG_LEVEL: DEBUG
    ports:
      - 8011:8000

  rapportageservice-test:
    <<: [ *x-py-tests, *x-rapportageservice ]
