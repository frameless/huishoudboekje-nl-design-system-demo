version: "3.7"

x-backend: &x-backend
  build:
    dockerfile: ./backend/dev.Dockerfile
    context: .
  volumes:
    - ./backend:/app

x-huishoudboekjeservice: &x-huishoudboekjeservice
  build:
    dockerfile: ./huishoudboekje_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/huishoudboekje_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    HHB_DATABASE_URL: "postgresql://hhb:hhb@db/huishoudboekjeservice"

x-organisatieservice: &x-organisatieservice
  build:
    dockerfile: ./organisatie_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/organisatie_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    ORGANISATIE_DATABASE_URL: "postgresql://hhb:hhb@db/organisatieservice"

x-grootboekservice: &x-grootboekservice
  build:
    dockerfile: ./grootboek_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/grootboek_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    GROOTBOEK_DATABASE_URL: "postgresql://hhb:hhb@db/grootboekservice"

x-banktransactieservice: &x-banktransactieservice
  build:
    dockerfile: ./bank_transactie_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/bank_transactie_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    GROOTBOEK_DATABASE_URL: "postgresql://hhb:hhb@db/banktransactieservice"

x-logservice: &x-logservice
  build:
    dockerfile: ./log_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/log_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    GROOTBOEK_DATABASE_URL: "postgresql://hhb:hhb@db/logservice"

x-tests: &x-tests
  profiles:
    - tests
  entrypoint:
    - /bin/sh
    - -c
    - pytest tests

services:
  # Database
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    restart: unless-stopped

  # Database preparations
  db-init:
    image: postgres:13-alpine
    command:
      - /bin/sh
      - -c
      - >-
        export PGPASSWORD=postgres &&
        psql -h db -U postgres -c "CREATE USER hhb WITH PASSWORD 'hhb'" || true &&
        psql -h db -U postgres -c "CREATE DATABASE huishoudboekjeservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE organisatieservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE banktransactieservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE grootboekservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE logservice" || true
    depends_on:
      - db

#  # Frontend # Todo: super slow, doesn't work yet.
#  frontend:
#    build:
#      dockerfile: ./frontend/dev.Dockerfile
#      context: .
#    environment:
#      PROXY: http://localhost:5000
#    volumes:
#      - ./frontend:/app
#    ports:
#      - 3000:3000
#    command:
#      - npm install && npm start

  backend:
    <<: *x-backend
    environment:
      APP_SETTINGS: hhb_backend.config.DevelopmentConfig
#     AUTH_AUDIENCE: None
#     AUTH_TOKEN_SECRET: koen
      OIDC_CLIENT_SECRETS: /app/etc/client_secrets.json
#     OIDC_CLOCK_SKEW: "600"
      PREFIX: /api
      HHB_SERVICE_URL: "http://huishoudboekjeservice:8000"
      ORGANISATIE_SERVICE_URL: "http://organisatieservice:8000"
      TRANSACTIE_SERVICE_URL: "http://banktransactieservice:8000"
      GROOTBOEK_SERVICE_URL: "http://grootboekservice:8000"
      LOG_SERVICE_URL: "http://logservice:8000"
      # The contact catalogus is another component that is in a separate docker-compose, where you need to change the port it runs on to 8006.
      CONTACTCATALOGUS_SERVICE_URL: "http://host.docker.internal:8006"
      SECRET_KEY: koen
    ports:
      - 5000:8000

  backend-test:
    <<: *x-backend
    <<: *x-tests

  huishoudboekjeservice:
    <<: *x-huishoudboekjeservice
    environment:
      HHB_DATABASE_URL: "postgresql://hhb:hhb@db/huishoudboekjeservice"
    ports:
      - 8001:8000

  huishoudboekjeservice-test:
    <<: *x-huishoudboekjeservice
    <<: *x-tests

  organisatieservice:
    <<: *x-organisatieservice
    environment:
      ORGANISATIE_DATABASE_URL: "postgresql://hhb:hhb@db/organisatieservice"
    ports:
      - 8002:8000

  organisatieservice-test:
    <<: *x-organisatieservice
    <<: *x-tests

  banktransactieservice:
    <<: *x-banktransactieservice
    environment:
      TRANSACTIE_DATABASE_URL: "postgresql://hhb:hhb@db/banktransactieservice"
    ports:
      - 8003:8000

  banktransactieservice-test:
    <<: *x-banktransactieservice
    <<: *x-tests

  grootboekservice:
    <<: *x-grootboekservice
    environment:
      GROOTBOEK_DATABASE_URL: "postgresql://hhb:hhb@db/grootboekservice"
    ports:
      - 8004:8000

  grootboekservice-test:
    <<: *x-organisatieservice
    <<: *x-tests

  logservice:
    <<: *x-logservice
    environment:
      LOG_DATABASE_URL: "postgresql://hhb:hhb@db/logservice"
    ports:
      - 8005:8000

  logservice-test:
    <<: *x-logservice
    <<: *x-tests