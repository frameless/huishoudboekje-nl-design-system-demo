# Todo: frontend in docker-compose is super slow, doesn't work yet.
version: "3.7"

x-backend: &x-backend
  build:
    dockerfile: ./backend/dev.Dockerfile
    context: .
  volumes:
    - ./backend:/app

x-backend-burgers: &x-backend-burgers
  build:
    dockerfile: ./dev.Dockerfile
    context: ./backend-burgers
  volumes:
    - ./backend-burgers:/app

x-huishoudboekjeservice: &x-huishoudboekjeservice
  build:
    dockerfile: ./huishoudboekje_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/huishoudboekje_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    HHB_DATABASE_URL: "postgresql://hhb:hhb@db/huishoudboekjeservice"

x-organisatieservice: &x-organisatieservice
  build:
    dockerfile: ./organisatie_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/organisatie_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    ORGANISATIE_DATABASE_URL: "postgresql://hhb:hhb@db/organisatieservice"

x-grootboekservice: &x-grootboekservice
  build:
    dockerfile: ./grootboek_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/grootboek_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    GROOTBOEK_DATABASE_URL: "postgresql://hhb:hhb@db/grootboekservice"

x-banktransactieservice: &x-banktransactieservice
  build:
    dockerfile: ./bank_transactie_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/bank_transactie_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    GROOTBOEK_DATABASE_URL: "postgresql://hhb:hhb@db/banktransactieservice"

x-logservice: &x-logservice
  build:
    dockerfile: ./log_service/dev.Dockerfile
    context: ./services
  volumes:
    - ./services/log_service:/app
    - ./services/core_service/core_service:/app/core_service
  environment:
    GROOTBOEK_DATABASE_URL: "postgresql://hhb:hhb@db/logservice"

x-postadressenservice: &x-postadressenservice
  build:
    context: ./services/postadressenservice
    dockerfile: ./dev.Dockerfile
  volumes:
    - ./services/postadressenservice:/app
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/postadressenservice"

x-alarmenservice: &x-alarmenservice
  build:
    context: ./services/alarmenservice
    dockerfile: ./dev.Dockerfile
  volumes:
    - ./services/alarmenservice:/app
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/alarmenservice"

x-signalenservice: &x-signalenservice
  build:
    context: ./services/signalenservice
    dockerfile: ./dev.Dockerfile
  volumes:
    - ./services/signalenservice:/app
  environment:
    DATABASE_URL: "postgresql://hhb:hhb@db/signalenservice"

x-tests: &x-tests
  profiles:
    - tests
  entrypoint:
    - /bin/sh
    - -c
    - pytest tests

x-resource-limit: &x-resource-limit
  deploy:
    resources:
      limits:
        cpus: '0.20'   #20% of a single core
        memory: 250M  # 250mb of memory

services:
  # Database
  db:
    container_name: database
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    restart: unless-stopped

  # Database preparations
  db-init:
    container_name: database_init
    image: postgres:13-alpine
    command:
      - /bin/sh
      - -c
      - >-
        export PGPASSWORD=postgres &&
        psql -h db -U postgres -c "CREATE USER hhb WITH PASSWORD 'hhb'" || true &&
        psql -h db -U postgres -c "ALTER USER hhb WITH SUPERUSER" || true &&
        psql -h db -U postgres -c "CREATE DATABASE huishoudboekjeservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE organisatieservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE banktransactieservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE grootboekservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE logservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE postadressenservice" || true &&
        psql -h db -U postgres -c "CREATE DATABASE alarmenservice" || true
    profiles:
      - db
    depends_on:
      - db

  # Database teardown
  db-teardown:
    image: postgres:13-alpine
    command:
      - /bin/sh
      - -c
      - >-
        export PGPASSWORD=postgres &&
        psql -h db -U postgres -c "drop database IF EXISTS huishoudboekjeservice" &&
        psql -h db -U postgres -c "drop database IF EXISTS organisatieservice" &&
        psql -h db -U postgres -c "drop database IF EXISTS banktransactieservice" &&
        psql -h db -U postgres -c "drop database IF EXISTS grootboekservice" &&
        psql -h db -U postgres -c "drop database IF EXISTS logservice" &&
        psql -h db -U postgres -c "drop database IF EXISTS postadressenservice" &&
        psql -h db -U postgres -c "drop database IF EXISTS alarmenservice" &&
        psql -h db -U postgres -c "drop role IF EXISTS hhb"
    profiles:
      - db
    depends_on:
      - db

  backend:
    <<: *x-resource-limit
    <<: *x-backend
    container_name: backend
    environment:
      APP_SETTINGS: hhb_backend.config.DevelopmentConfig
      #     AUTH_AUDIENCE: None
      #     AUTH_TOKEN_SECRET: test
      OIDC_CLIENT_SECRETS: /app/etc/client_secrets.json
      #     OIDC_CLOCK_SKEW: "600"
      PREFIX: /api
      HHB_SERVICE_URL: "http://huishoudboekjeservice:8000"
      ORGANISATIE_SERVICE_URL: "http://organisatieservice:8000"
      TRANSACTIE_SERVICE_URL: "http://banktransactieservice:8000"
      GROOTBOEK_SERVICE_URL: "http://grootboekservice:8000"
      LOG_SERVICE_URL: "http://logservice:8000"
      POSTADRESSENSERVICE_URL: "http://postadressenservice:8080"
      ALARMENSERVICE_URL: "http://alarmenservice:8080"
      SECRET_KEY: koen
    ports:
      - 5000:8000

  backend-test:
    <<: *x-resource-limit
    <<: *x-backend
    <<: *x-tests

  backend-burgers:
    <<: *x-resource-limit
    <<: *x-backend-burgers
    container_name: backend-burgers
    environment:
      HUISHOUDBOEKJESERVICE_URL: "http://huishoudboekjeservice:8000"
    ports:
      - 9000:8080

  backend-burgers-test:
    <<: *x-resource-limit
    <<: *x-backend-burgers
    profiles:
      - tests
    entrypoint:
      - /bin/sh
      - -c
      - npm run test

  huishoudboekjeservice:
    <<: *x-resource-limit
    <<: *x-huishoudboekjeservice
    container_name: huishoudboekjeservice
    environment:
      HHB_DATABASE_URL: "postgresql://hhb:hhb@db/huishoudboekjeservice"
    ports:
      - 8001:8000

  huishoudboekjeservice-test:
    <<: *x-resource-limit
    <<: *x-huishoudboekjeservice
    <<: *x-tests

  organisatieservice:
    <<: *x-resource-limit
    <<: *x-organisatieservice
    container_name: organisatieservice
    environment:
      ORGANISATIE_DATABASE_URL: "postgresql://hhb:hhb@db/organisatieservice"
    ports:
      - 8002:8000

  organisatieservice-test:
    <<: *x-resource-limit
    <<: *x-organisatieservice
    <<: *x-tests

  banktransactieservice:
    <<: *x-resource-limit
    <<: *x-banktransactieservice
    container_name: banktransactieservice
    environment:
      TRANSACTIE_DATABASE_URL: "postgresql://hhb:hhb@db/banktransactieservice"
    ports:
      - 8003:8000

  banktransactieservice-test:
    <<: *x-resource-limit
    <<: *x-banktransactieservice
    <<: *x-tests

  grootboekservice:
    <<: *x-resource-limit
    <<: *x-grootboekservice
    container_name: grootboekservice
    environment:
      GROOTBOEK_DATABASE_URL: "postgresql://hhb:hhb@db/grootboekservice"
    ports:
      - 8004:8000

  grootboekservice-test:
    <<: *x-resource-limit
    <<: *x-organisatieservice
    <<: *x-tests

  logservice:
    <<: *x-resource-limit
    <<: *x-logservice
    container_name: logservice
    environment:
      LOG_DATABASE_URL: "postgresql://hhb:hhb@db/logservice"
    ports:
      - 8005:8000

  logservice-test:
    <<: *x-resource-limit
    <<: *x-logservice
    <<: *x-tests

  # Trail of history: port 8006 used to be in use by the contactcatalogus, but we deprecated this service in favor of the postadressenservice.

  postadressenservice:
    <<: *x-resource-limit
    <<: *x-postadressenservice
    container_name: postadressenservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/postadressenservice"
    ports:
      - 8007:8080

  alarmenservice:
    <<: *x-resource-limit
    <<: *x-alarmenservice
    container_name: alarmenservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/alarmenservice"
    ports:
      - 8008:8080

  signalenservice:
    <<: *x-resource-limit
    <<: *x-signalenservice
    container_name: signalenservice
    environment:
      DATABASE_URL: "postgresql://hhb:hhb@db/signalenservice"
    ports:
      - 8009:8080