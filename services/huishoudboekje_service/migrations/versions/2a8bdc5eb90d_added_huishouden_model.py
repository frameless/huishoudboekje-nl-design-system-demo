"""added huishouden model

Revision ID: 2a8bdc5eb90d
Revises: b516f0abf35d
Create Date: 2021-06-23 12:08:02.220283

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy.orm.session import Session

# revision identifiers, used by Alembic.
revision = '2a8bdc5eb90d'
down_revision = 'b516f0abf35d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('huishoudens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    op.add_column('burgers',
                  sa.Column('huishouden_id', sa.Integer(), nullable=True))
    connection = op.get_bind()
    t_burgers = sa.Table(
        'burgers',
        sa.MetaData(),
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('huishouden_id', sa.Integer(), nullable=True),
    )
    session = Session(bind=op.get_bind())
    rows = session.query(t_burgers.c.id).count()

    results = connection.execute(sa.select([
        t_burgers.c.id,
        t_burgers.c.huishouden_id,
    ])).fetchall()

    i = 1
    for id_, huishouden_id_ in results:
        connection.execute(t_burgers.update().where(t_burgers.c.id == id_).values(
            huishouden_id=i,
        ))
        i = i + 1

    op.alter_column('burgers', 'huishouden_id', nullable=False)

    t_huishoudens = sa.Table('huishoudens', sa.MetaData(),
                             sa.Column('id', sa.Integer(), nullable=False))

    for i in range(1, rows+1):
        op.bulk_insert(t_huishoudens, [
            {'id': i},
        ])


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint(None, 'burgers', type_='foreignkey')
    op.drop_column('burgers', 'huishouden_id')
    op.drop_table('huishoudens')
    # ### end Alembic commands ###
