.only-on-branches: &only-on-branches
  only:
    - branches@commonground/huishoudboekje/app-new

.frontend:
  stage: app-test
  needs: [ ]
  image:
    name: ${DOCKER_PROXY}node:lts-alpine
  variables:
    NPM_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/npm"
    CYPRESS_INSTALL_BINARY: "0"
  cache:
    key: "${CI_COMMIT_REF_SLUG}__${CI_JOB_NAME}"
    paths:
      - ${NPM_CACHE_DIR}
  before_script:
    - cd ./frontend/app
    - npm ci --cache ${NPM_CACHE_DIR} --prefer-offline --no-progress --color=false --quiet
  tags:
    - docker
  retry:
    max: 2
    when: script_failure

frontend-test:
  <<: *only-on-branches
  extends: .frontend
  script:
    - npm run lint
    - npm run test:coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    expire_in: 1 month
    paths:
      - frontend/app/coverage
    reports:
      cobertura: frontend/app/coverage/cobertura-coverage.xml
      junit: frontend/app/junit.xml
  when: on_success


# This template requires the following:
#   variables:
#      DIRECTORY: <the directory of the application>
.Service Test:
  stage: app-test
  tags:
    - docker
  retry:
    max: 2
    when: script_failure
  image:
    name: $CI_REGISTRY_IMAGE/$PYTHON_POSTGRES:$IMAGE_TAG
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    key: "${CI_COMMIT_REF_SLUG}__${CI_JOB_NAME}"
    paths:
      - ${PIP_CACHE_DIR}
  script:
    - make -C ${DIRECTORY} requirements
    - make -C ${DIRECTORY} all
    - make -C ${DIRECTORY} lint
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - ${DIRECTORY}/htmlcov
    reports:
      cobertura: ${DIRECTORY}/coverage.xml
      junit: ${DIRECTORY}/report.xml
  when: on_success

backend-burgers-test:
  <<: *only-on-branches
  stage: app-test
  needs: [ ]
  image:
    name: ${DOCKER_PROXY}node:lts-alpine
  variables:
    NPM_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/npm"
    CYPRESS_INSTALL_BINARY: "0"
  cache:
    key: "${CI_COMMIT_REF_SLUG}__${CI_JOB_NAME}"
    paths:
      - ${NPM_CACHE_DIR}
  before_script:
    - cd ./backend-burgers
    - npm ci --cache ${NPM_CACHE_DIR} --prefer-offline --no-progress --color=false --quiet
  tags:
    - docker
  retry:
    max: 2
    when: script_failure
  script:
    - npm run test:coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    expire_in: 1 month
    paths:
      - backend-burgers/coverage
    reports:
      junit: backend-burgers/junit.xml
  when: on_success

backend-test:
  <<: *only-on-branches
  extends: .Service Test
  variables:
    DIRECTORY: backend

core-service-test:
  <<: *only-on-branches
  extends: .Service Test
  variables:
    DIRECTORY: services/core_service

huishoudboekje-service-test:
  <<: *only-on-branches
  extends: .Service Test
  variables:
    DIRECTORY: services/huishoudboekje_service

organisatie-service-test:
  <<: *only-on-branches
  extends: .Service Test
  variables:
    DIRECTORY: services/organisatie_service

bank-transactie-service-test:
  <<: *only-on-branches
  extends: .Service Test
  variables:
    DIRECTORY: services/bank_transactie_service

grootboek-service-test:
  <<: *only-on-branches
  extends: .Service Test
  variables:
    DIRECTORY: services/grootboek_service

log-service-test:
  <<: *only-on-branches
  extends: .Service Test
  variables:
    DIRECTORY: services/log_service

changeset:
  <<: *only-on-branches
  stage: test
  needs: [ ]
  image:
    name: ${DOCKER_PROXY}node:lts-alpine
  variables:
    NPM_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/npm"
    CYPRESS_INSTALL_BINARY: "0"
  cache:
    key: "${CI_COMMIT_REF_SLUG}__${CI_JOB_NAME}"
    paths:
      - ${NPM_CACHE_DIR}
  before_script:
    - apk add git
    - npm i --cache ${NPM_CACHE_DIR} --prefer-offline --no-progress --color=false --quiet
  tags:
    - docker
  script:
    - git fetch origin develop:develop
    - npm run check-changeset
