# Deploy template for app
.deploy:
  stage: deploy
  needs:
    - build-shell-runner
    - build-helm
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  tags:
    - cg
    - docker
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN/
    on_stop: destroy-app
  variables:
    OIDC_DEX: "true"
    OIDC_CLIENT_ID: "huishoudboekje"
    OIDC_CLIENT_SECRET: "ZwwcL2zjQyJUBnFPVoOb"
    THEME: "sloothuizen"
  before_script:
    - |
      HHB_HOST=${HHB_HOST:-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN}
      OIDC_ISSUER=${OIDC_ISSUER:-https://dex-sloothuizen-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN}
      DATABASE_PERSISTENCE="${DATABASE_PERSISTENCE:-true}"
    - sh helm/theme-yaml.sh frontend/theme/${THEME:-sloothuizen} > helm/theme.yaml
    # This lets the huishoudboekje postgresql be upgraded
    # see https://stackoverflow.com/questions/53186601/re-use-persistentvolume-after-re-installing-a-helm-deployment
    - kubectl delete --namespace $REVIEW_NAMESPACE statefulsets.apps huishoudboekje-postgresql --cascade=false 2>&1 >/dev/null  || true
  script:
    - |
      helm upgrade --install "huishoudboekje" helm/repo/huishoudboekje-${COMPONENT_VERSION}.tgz \
        --debug \
        --namespace $REVIEW_NAMESPACE --create-namespace \
        --values helm/charts/huishoudboekje/values.yaml \
        --values helm/values-dex.yaml \
        --values helm/theme.yaml \
        --values helm/values-review-local.yaml \
        --set "global.imageTag=$IMAGE_TAG" \
        --set "medewerker-frontend.ingress.hosts[0].host=$HHB_HOST" \
        --set "medewerker-frontend.ingress.hosts[0].paths[0]=/" \
        --set "medewerker-backend.ingress.hosts[0].host=$HHB_HOST" \
        --set "medewerker-backend.ingress.hosts[0].paths[0]=/api/" \
        --set "medewerker-backend.appSettings=${APP_SETTINGS:-hhb_backend.config.ProductionConfig}" \
        --set "medewerker-backend.oidc.issuer=${OIDC_ISSUER}" \
        --set "medewerker-backend.oidc.clientId=${OIDC_CLIENT_ID}" \
        --set "medewerker-backend.oidc.clientSecret=${OIDC_CLIENT_SECRET}" \
        --set "medewerker-backend.oidc.authorizationEndpoint=${OIDC_AUTHORIZATION_ENDPOINT:-${OIDC_ISSUER}/auth}" \
        --set "medewerker-backend.oidc.redirectUris[0].prefix=http://localhost:3000" \
        --set "medewerker-backend.oidc.redirectUris[0].callback=http://localhost:3000/api/custom_oidc_callback" \
        --set "medewerker-backend.oidc.redirectUris[1].prefix=https://$HHB_HOST" \
        --set "medewerker-backend.oidc.redirectUris[1].callback=https://$HHB_HOST/api/custom_oidc_callback" \
        --set "medewerker-backend.oidc.tokenUri=${OIDC_TOKEN_ENDPOINT:-${OIDC_ISSUER}/token}" \
        --set "medewerker-backend.oidc.tokeninfoUri=${OIDC_TOKENINFO_ENDPOINT:-${OIDC_ISSUER}/tokeninfo}" \
        --set "medewerker-backend.oidc.userinfoUri=${OIDC_USERINFO_ENDPOINT:-${OIDC_ISSUER}/userinfo}" \
        --set "dex.enabled=${OIDC_DEX}" \
        --set "dex.ingress.hosts[0]=dex-sloothuizen-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN" \
        --set "dex.config.issuer=${OIDC_ISSUER}" \
        --set "dex.config.staticClients[0].secret=${OIDC_CLIENT_SECRET}" \
        --set "dex.config.staticClients[0].redirectURIs[0]=https://$HHB_HOST/api/custom_oidc_callback" \
        --set "dex.config.staticClients[0].redirectURIs[1]=http://localhost:3000/api/custom_oidc_callback" \
        --set "postgresql.postgresqlPassword=${DATABASE_PASSWORD}" \
        --set "postgresql.persistence.enabled=${DATABASE_PERSISTENCE}" \
        --render-subchart-notes
    - echo -e -n "${HHB_HOST}" > ci_review_hostname.txt
  after_script:
    - helm uninstall --namespace $REVIEW_NAMESPACE postgres-operator 2>&1 >/dev/null || true
  artifacts:
    paths:
      - ci_review_hostname.txt
  only:
    - branches@commonground/huishoudboekje/app-new
  retry:
    max: 2
    when: script_failure

# Shut down app
destroy-app:
  stage: deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  tags:
    - cg
    - docker
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  variables:
    GIT_STRATEGY: none
  script:
    - kubectl delete namespace $REVIEW_NAMESPACE
  when: manual
  retry:
    max: 2
    when: script_failure
  except:
    - master
    - develop
    - acceptance

.helm-test:
  stage: e2e
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  tags:
    - cg
    - docker
  environment:
    name: review/$CI_COMMIT_REF_SLUG
  script:
    helm test --namespace $REVIEW_NAMESPACE  --logs  huishoudboekje
  allow_failure: true

.develop:
  variables:
    REVIEW_NAMESPACE: "hhb-test"
    APP_SETTINGS: "hhb_backend.config.StagingConfig"

.acceptance:
  variables:
    REVIEW_NAMESPACE: "hhb-acc"

.master:
  variables:
    REVIEW_NAMESPACE: "hhb-demo"

# Deploy hhb-<environment slug>.nlx.reviews
deploy-review:
  environment:
    url: https://hhb-${CI_ENVIRONMENT_SLUG}.${REVIEW_BASE_DOMAIN}/
    auto_stop_in: 10 days
  variables:
    APP_SETTINGS: "hhb_backend.config.StagingConfig"
    DATABASE_PERSISTENCE: "false"
  extends:
    - .deploy
  only:
    - branches@commonground/huishoudboekje/app-new
  except:
    - master
    - develop
    - acceptance

# Deploy hhb-test.nlx.reviews
deploy-develop:
  extends:
    - .develop
    - .deploy
  only:
    - develop@commonground/huishoudboekje/app-new

# Deploy hhb-acc.nlx.reviews
deploy-acc:
  extends:
    - .acceptance
    - .deploy
  only:
    - acceptance@commonground/huishoudboekje/app-new

# Deploy hhb-demo.nlx.reviews
deploy-master:
  extends:
    - .master
    - .deploy
  only:
    - master@commonground/huishoudboekje/app-new


helm-test-review:
  needs:
    - deploy-review
  extends:
    - .helm-test
  only:
    - branches@commonground/huishoudboekje/app-new
  except:
    - master
    - develop
    - acceptance

helm-test-develop:
  needs:
    - deploy-develop
  extends:
    - .helm-test
    - .develop
  only:
    - develop@commonground/huishoudboekje/app-new
