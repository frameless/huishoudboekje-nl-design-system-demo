# Deploy template for app
.deploy-app:
  stage: deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  environment:
    name: $CI_COMMIT_REF_SLUG
    url: https://$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN/
    on_stop: destroy-app
  script:
    - |
      helm repo add stable "https://kubernetes-charts.storage.googleapis.com"
      helm repo add zalando-operator "https://raw.githubusercontent.com/zalando/postgres-operator/master/charts/postgres-operator"
      helm repo update
    - |
      helm upgrade --install --create-namespace --namespace $REVIEW_NAMESPACE postgres-operator zalando-operator/postgres-operator \
        --debug \
      	--values helm/postgres-operator.yaml \
        --set podServiceAccount.name=${REVIEW_NAMESPACE}-postgres-pod \
        --set serviceAccount.name=${REVIEW_NAMESPACE}-postgres-operator
    - helm dependency build helm/charts/huishoudboekje-review
    - (cd helm/charts/medewerker-frontend; ln -s ../../../frontend/theme/sloothuizen theme)
    - |
      export OIDC_HOST="dex-sloothuizen-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN"
      export OIDC_SECRET="ZwwcL2zjQyJUBnFPVoOb"
      export HHB_HOST="$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN"
    - |
      helm upgrade --install --create-namespace "huishoudboekje" helm/charts/huishoudboekje-review \
        --debug \
        --namespace $REVIEW_NAMESPACE \
        --values helm/charts/huishoudboekje-review/values.yaml \
        --set "global.imageTag=$IMAGE_TAG" \
        --set "medewerker-frontend.ingress.hosts[0].host=$HHB_HOST" \
        --set "medewerker-frontend.ingress.hosts[0].paths[0]=/" \
        --set "medewerker-backend.ingress.hosts[0].host=$HHB_HOST" \
        --set "medewerker-backend.ingress.hosts[0].paths[0]=/api/" \
        --set "medewerker-backend.oidc.issuer=https://$OIDC_HOST" \
        --set "medewerker-backend.oidc.clientSecret=${OIDC_SECRET}" \
        --set "medewerker-backend.oidc.authorizationEndpoint=https://$OIDC_HOST/auth" \
        --set "medewerker-backend.oidc.redirectUris[0].prefix=http://localhost:3000" \
        --set "medewerker-backend.oidc.redirectUris[0].callback=http://localhost:3000/api/custom_oidc_callback" \
        --set "medewerker-backend.oidc.redirectUris[1].prefix=https://$HHB_HOST" \
        --set "medewerker-backend.oidc.redirectUris[1].callback=https://$HHB_HOST/api/custom_oidc_callback" \
        --set "medewerker-backend.oidc.tokenUri=https://$OIDC_HOST/token" \
        --set "medewerker-backend.oidc.tokeninfoUri=https://$OIDC_HOST/tokeninfo" \
        --set "medewerker-backend.oidc.userinfoUri=https://$OIDC_HOST/userinfo" \
        --set "dex.ingress.hosts[0]=$OIDC_HOST" \
        --set "dex.config.issuer=https://$OIDC_HOST" \
        --set "dex.config.staticClients[0].secret=${OIDC_SECRET}" \
        --set "dex.config.staticClients[0].redirectURIs[0]=https://$HHB_HOST/api/custom_oidc_callback" \
        --set "dex.config.staticClients[0].redirectURIs[1]=http://localhost:3000/api/custom_oidc_callback"
    - |
      FAILED=true
      for i in $(seq 1 8); do
        if helm test --logs --namespace $REVIEW_NAMESPACE huishoudboekje; then
          FAILED=false
          break
        else
          sleep 6
        fi
      done
      if $FAILED; then
        exit 1
      fi
    - echo "Take a look at https://${REVIEW_NAMESPACE}.${REVIEW_BASE_DOMAIN}/"
  only:
    - branches@commonground/huishoudboekje/app-new
  tags:
    - cg
    - docker

.deploy-docs:
  stage: deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  variables:
    DOCS_HOST: docs-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN
  script:
    - |
      helm upgrade --install --create-namespace "huishoudboekje-docs" ./helm/charts/docs \
        --namespace $REVIEW_NAMESPACE \
        --values ./helm/charts/docs/values.yaml \
        --set "global.imageTag=$IMAGE_TAG" \
        --set "ingress.hosts[0]=$DOCS_HOST"
    - echo "DOCS_URL=https://${DOCS_HOST}" > docs.env
  artifacts:
    reports:
      dotenv: docs.env
  environment:
    name: docs-${CI_COMMIT_REF_SLUG}
    url: ${DOCS_URL}
    on_stop: destroy-docs
  only:
    - branches@commonground/huishoudboekje/app-new
  tags:
    - cg
    - docker

.test:
  variables:
    REVIEW_NAMESPACE: "hhb-test"

.acc:
  variables:
    REVIEW_NAMESPACE: "hhb-acc"

.proddemo:
  variables:
    REVIEW_NAMESPACE: "hhb-demo"

# Deploy (Review)
deploy-review:
  environment:
    url: https://hhb-${CI_ENVIRONMENT_SLUG}.${REVIEW_BASE_DOMAIN}/
  extends:
    - .deploy-app
  except:
    - master
    - develop
    - acceptance

# Deploy (TEST)
deploy-test:
  extends:
    - .test
    - .deploy-app
  only:
    - develop

# Deploy (ACC)
deploy-acc:
  extends:
    - .acc
    - .deploy-app
  only:
    - acceptance

# Deploy (PROD/DEMO)
deploy-proddemo:
  extends:
    - .proddemo
    - .deploy-app
  only:
    - master


# Deploy Docs (Review)
docs-deploy-review:
  variables:
    DOCS_HOST: docs-hhb-${CI_ENVIRONMENT_SLUG}.$REVIEW_BASE_DOMAIN
  extends:
    - .deploy-docs
  except:
    - master
    - develop
    - acceptance

# Deploy (TEST)
docs-deploy-test:
  extends:
    - .test
    - .deploy-docs
  only:
    - develop

# Deploy (ACC)
docs-deploy-acc:
  extends:
    - .acc
    - .deploy-docs
  only:
    - acceptance

# Deploy (PROD/DEMO)
docs-deploy-proddemo:
  extends:
    - .proddemo
    - .deploy-docs
  only:
    - master

# Shut down app
.destroy:
  stage: deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  variables:
    GIT_STRATEGY: none
    KUBECONFIG: /secrets/kubeconfig/review.conf
  script:
    - kubectl delete namespace $REVIEW_NAMESPACE
  when: manual
  environment:
    action: stop
  tags:
    - cg
    - docker

destroy-app:
  extends: .destroy
  environment:
    name: $CI_COMMIT_REF_SLUG
  before_script:
    - helm uninstall --namespace $REVIEW_NAMESPACE postgres-operator
  except:
    - master
    - develop
    - acceptance

destroy-docs:
  extends: .destroy
  environment:
    name: docs-${CI_COMMIT_REF_SLUG}
  except:
    - master
    - develop
    - acceptance
