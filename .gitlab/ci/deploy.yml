# Deploy template for app
.deploy-app:
  stage: deploy
  needs:
    - build-cg
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN/
    on_stop: destroy-app
  variables:
    OIDC_DEX: "true"
    OIDC_CLIENT_ID: "huishoudboekje"
    OIDC_CLIENT_SECRET: "ZwwcL2zjQyJUBnFPVoOb"
    THEME: "nijmegen"
  script:
    - |
      helm repo add stable "https://charts.helm.sh/stable"
      helm repo add bitnami "https://charts.bitnami.com/bitnami"
      helm repo update
      helm dependency build helm/charts/database
      helm dependency build helm/charts/huishoudboekje-review
    - kubectl delete --namespace $REVIEW_NAMESPACE statefulsets.apps huishoudboekje-postgresql --cascade=false || true
    - kubectl create namespace $REVIEW_NAMESPACE || true
    - |
      HHB_HOST=${HHB_HOST:-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN}
      OIDC_ISSUER=${OIDC_ISSUER:-https://dex-sloothuizen-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN}
      DATABASE_PERSISTENCE="${DATABASE_PERSISTENCE:-false}"
    - helm/theme-yaml.sh frontend/theme/${THEME:-sloothuizen} > helm/theme.yaml
    - |
      helm upgrade --install "huishoudboekje" helm/charts/huishoudboekje-review \
        --debug \
        --namespace $REVIEW_NAMESPACE --create-namespace \
        --values helm/charts/huishoudboekje-review/values.yaml \
        --values helm/theme-sloothuizen.yaml \
        --set "global.imageTag=$IMAGE_TAG" \
        --set "medewerker-frontend.ingress.hosts[0].host=$HHB_HOST" \
        --set "medewerker-frontend.ingress.hosts[0].paths[0]=/" \
        --set "medewerker-backend.ingress.hosts[0].host=$HHB_HOST" \
        --set "medewerker-backend.ingress.hosts[0].paths[0]=/api/" \
        --set "medewerker-backend.appSettings=${APP_SETTINGS:-hhb_backend.config.ProductionConfig}" \
        --set "medewerker-backend.oidc.issuer=${OIDC_ISSUER}" \
        --set "medewerker-backend.oidc.clientId=${OIDC_CLIENT_ID}" \
        --set "medewerker-backend.oidc.clientSecret=${OIDC_CLIENT_SECRET}" \
        --set "medewerker-backend.oidc.authorizationEndpoint=${OIDC_AUTHORIZATION_ENDPOINT:-${OIDC_ISSUER}/auth}" \
        --set "medewerker-backend.oidc.redirectUris[0].prefix=http://localhost:3000" \
        --set "medewerker-backend.oidc.redirectUris[0].callback=http://localhost:3000/api/custom_oidc_callback" \
        --set "medewerker-backend.oidc.redirectUris[1].prefix=https://$HHB_HOST" \
        --set "medewerker-backend.oidc.redirectUris[1].callback=https://$HHB_HOST/api/custom_oidc_callback" \
        --set "medewerker-backend.oidc.tokenUri=${OIDC_TOKEN_ENDPOINT:-${OIDC_ISSUER}/token}" \
        --set "medewerker-backend.oidc.tokeninfoUri=${OIDC_TOKENINFO_ENDPOINT:-${OIDC_ISSUER}/tokeninfo}" \
        --set "medewerker-backend.oidc.userinfoUri=${OIDC_USERINFO_ENDPOINT:-${OIDC_ISSUER}/userinfo}" \
        --set "dex.enabled=${OIDC_DEX}" \
        --set "dex.ingress.hosts[0]=dex-sloothuizen-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN" \
        --set "dex.config.issuer=${OIDC_ISSUER}" \
        --set "dex.config.staticClients[0].secret=${OIDC_CLIENT_SECRET}" \
        --set "dex.config.staticClients[0].redirectURIs[0]=https://$HHB_HOST/api/custom_oidc_callback" \
        --set "dex.config.staticClients[0].redirectURIs[1]=http://localhost:3000/api/custom_oidc_callback" \
        --set "database.postgresql.postgresqlPassword=${DATABASE_PASSWORD}" \
        --set "database.postgresql.persistence.enabled=${DATABASE_PERSISTENCE}" \
        --render-subchart-notes
    - echo -e -n "${HHB_HOST}" > ci_review_hostname.txt
    - helm uninstall --namespace $REVIEW_NAMESPACE postgres-operator || true
  artifacts:
    paths:
      - ci_review_hostname.txt
  only:
    - branches@commonground/huishoudboekje/app-new
  tags:
    - cg
    - docker
  retry:
    max: 2
    when: script_failure

.deploy-docs:
  stage: deploy
  needs:
    - build-cg
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  variables:
    DOCS_HOST: docs-$REVIEW_NAMESPACE.$REVIEW_BASE_DOMAIN
  script:
    - |
      helm upgrade --install --create-namespace "huishoudboekje-docs" ./helm/charts/docs \
        --namespace $REVIEW_NAMESPACE \
        --values ./helm/charts/docs/values.yaml \
        --set "global.imageTag=$IMAGE_TAG" \
        --set "ingress.hosts[0]=$DOCS_HOST"
    - echo "DOCS_URL=https://${DOCS_HOST}" > docs.env
  artifacts:
    reports:
      dotenv: docs.env
  environment:
    name: review/docs-${CI_COMMIT_REF_SLUG}
    url: ${DOCS_URL}
    on_stop: destroy-docs
  only:
    - branches@commonground/huishoudboekje/app-new
  tags:
    - cg
    - docker
  retry:
    max: 2
    when: script_failure

.test:
  variables:
    REVIEW_NAMESPACE: "hhb-test"
    APP_SETTINGS: "hhb_backend.config.StagingConfig"
    DATABASE_PERSISTENCE: "true"

.acc:
  variables:
    REVIEW_NAMESPACE: "hhb-acc"
    DATABASE_PERSISTENCE: "true"

.proddemo:
  variables:
    REVIEW_NAMESPACE: "hhb-demo"
    DATABASE_PERSISTENCE: "true"

# Deploy (Review)
deploy-review:
  environment:
    url: https://hhb-${CI_ENVIRONMENT_SLUG}.${REVIEW_BASE_DOMAIN}/
    auto_stop_in: 10 days
  variables:
    APP_SETTINGS: "hhb_backend.config.StagingConfig"
  extends:
    - .deploy-app
  except:
    - master
    - develop
    - acceptance

# Deploy (TEST)
deploy-test:
  extends:
    - .test
    - .deploy-app
  only:
    - develop

# Deploy (ACC)
deploy-acc:
  extends:
    - .acc
    - .deploy-app
  only:
    - acceptance

# Deploy (PROD/DEMO)
deploy-proddemo:
  extends:
    - .proddemo
    - .deploy-app
  only:
    - master


# Deploy Docs (Review)
docs-deploy-review:
  variables:
    DOCS_HOST: docs-hhb-${CI_ENVIRONMENT_SLUG}.$REVIEW_BASE_DOMAIN
  extends:
    - .deploy-docs
  environment:
    auto_stop_in: 10 days
  except:
    - master
    - develop
    - acceptance
  when: manual

# Deploy (TEST)
docs-deploy-test:
  extends:
    - .test
    - .deploy-docs
  only:
    - develop

# Deploy (ACC)
docs-deploy-acc:
  extends:
    - .acc
    - .deploy-docs
  only:
    - acceptance

# Deploy (PROD/DEMO)
docs-deploy-proddemo:
  extends:
    - .proddemo
    - .deploy-docs
  only:
    - master

# Shut down app
.destroy:
  stage: deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  variables:
    GIT_STRATEGY: none
  script:
    - kubectl delete namespace $REVIEW_NAMESPACE
  when: manual
  environment:
    action: stop
  tags:
    - cg
    - docker
  retry:
    max: 2
    when: script_failure

destroy-app:
  extends: .destroy
  environment:
    name: review/$CI_COMMIT_REF_SLUG
  before_script:
    - helm uninstall --namespace $REVIEW_NAMESPACE postgres-operator || true
  except:
    - master
    - develop
    - acceptance

destroy-docs:
  extends: .destroy
  environment:
    name: review/docs-${CI_COMMIT_REF_SLUG}
  except:
    - master
    - develop
    - acceptance
