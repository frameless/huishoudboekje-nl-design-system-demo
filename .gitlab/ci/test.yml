test-frontend:
  stage: test
  tags:
    - docker
  needs: []
  image: node:lts-alpine
  variables:
    NPM_CACHE_DIR: ${CI_PROJECT_DIR}/.npm-cache
  cache:
    key: "${CI_COMMIT_REF_SLUG}__${CI_JOB_NAME}"
    paths:
      - ${NPM_CACHE_DIR}
  script:
    - cd ./frontend/app
    - npm ci --cache ${NPM_CACHE_DIR} --prefer-offline --no-progress --color=false --quiet
    - npm run lint


# This template requires the following:
#   variables:
#      DIRECTORY: <the directory of the application>
.Service Test:
  stage: test
  needs:
    - build-python-postgres
  tags:
    - cg
    - docker
  image:
    name: $CI_REGISTRY_IMAGE/$PYTHON_POSTGRES:$IMAGE_TAG
  script:
    - make -C ${DIRECTORY} requirements
    - make -C ${DIRECTORY} all
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    expire_in: 1 week
    paths:
      - ${DIRECTORY}/htmlcov
    reports:
      cobertura: ${DIRECTORY}/coverage.xml


Backend Test:
  extends: .Service Test
  variables:
    DIRECTORY: backend
  only:
    - branches@commonground/huishoudboekje/app-new

Huishoudboekje Service Test:
  extends: .Service Test
  variables:
    DIRECTORY: services/huishoudboekje_service
  only:
    - branches@commonground/huishoudboekje/app-new

Organisatie Service Test:
  extends: .Service Test
  variables:
    DIRECTORY: services/organisatie_service
  only:
    - branches@commonground/huishoudboekje/app-new

Bank Transactie Service Test:
  extends: .Service Test
  variables:
    DIRECTORY: services/bank_transactie_service
  only:
    - branches@commonground/huishoudboekje/app-new
