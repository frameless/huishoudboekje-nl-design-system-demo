.build:
  stage: build
  needs: []
  retry:
    max: 2
    when: script_failure
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_PREFIX: "$CI_REGISTRY/$CI_PROJECT_PATH/"
    CYPRESS_INSTALL_BINARY: "0"
  script:
    - export CYPRESS_INSTALL_BINARY=0
    - export COMPONENT_TAG=$(git describe --long --all | sed 's!heads/!!')
    - export COMPONENT_COMMIT_HASH=$(git describe --always --abbrev=0 --match "NOT A TAG")
    - export DOCKER_CONFIG=/tmp/docker-config-$CI_JOB_ID
    - |
      if [ "${DOCKER_PROXY}" ]; then
        docker login -u "$CI_DEPENDENCY_PROXY_USER" --password-stdin "$CI_DEPENDENCY_PROXY_SERVER" <<< "$CI_DEPENDENCY_PROXY_PASSWORD"
      fi
    - make --jobs --output-sync=target docker-images
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - make --jobs --output-sync=target docker-push
  only:
    - branches@commonground/huishoudboekje/app-new

build-shell-runner:
  extends:
    - .build
  tags:
    - cg
    - shell
  only:
    - branches@commonground/huishoudboekje/app-new

build-fork:
  extends:
    - .build
  image: docker:19.03.13
  services:
  - docker:19.03.13-dind
  tags:
    - docker
  except:
    - branches@commonground/huishoudboekje/app-new
  before_script:
    - apk add --no-cache git make

build-helm:
  stage: build
  needs: []
  tags:
    - docker
  retry:
    max: 2
    when: script_failure
  image:
    name: ${DOCKER_PROXY}alpine/helm:3.5.0
    entrypoint: [""]
  before_script:
    - apk add --no-cache make
    - apk add --no-cache --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community yq
  script:
    - yq --inplace e ".global.imageTag = \"$IMAGE_TAG\"" helm/charts/huishoudboekje/values.yaml
    - make -C helm
  artifacts:
    paths:
      - helm/repo

pages:
  stage: deploy
  needs:
    - build-helm
  tags:
    - docker
  script:
    - mv helm/repo public
  artifacts:
    paths:
      - public
  only:
    - develop@commonground/huishoudboekje/app-new
