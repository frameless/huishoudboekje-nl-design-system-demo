# Some clarification on terminology:
# BE = Backend (The API)
# FE = Frontend (The UI)
# (BE|FE)-(D|T|A|P)
#
# We use a DTAP setup (Develop, Test, Acceptance, Production)
# where FE-D runs locally but talks BE-T. FE-T, FE-A and FE-P are talking to to BE-T, BE-A and BE-P respectively.
# Hence we only need a pipeline for T, A and P, not for D.

variables:
  IMAGE_TAG: "$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
  HHB_SECRET: test
  CI_API_V4_URL: https://gitlab.com/api/v4
  CI_PROJECT_ID: 20352213
  UNLEASH_INSTANCEID: JbZyPux6M7xwejsESy9L
  PYTHON_POSTGRES: python-postgres
  UNLEASH_APPNAME: huishoudboekje-frontend

stages:
- build
- ship
- deploy
- app-test
- test
- data

include:
- "/.gitlab/ci/build.yaml"
- "/.gitlab/ci/ship.yaml"
- "/.gitlab/ci/deploy.yaml"
- "/.gitlab/ci/test.yaml"
- "/.gitlab/ci/data.yaml"
- template: Security/SAST.gitlab-ci.yml
- template: Security/SAST-IaC.latest.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml

dependency_scanning:
  variables:
    SECURE_LOG_LEVEL: debug

sast:
  variables:
    SAST_EXCLUDED_ANALYZERS: brakeman, flawfinder, gosec, phpcs-security-audit, pmd-apex,
      security-code-scan, sobelow
  stage: test
