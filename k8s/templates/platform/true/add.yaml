---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: le-certs@sloothuizen.nl
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod
    # Enable the HTTP-01 challenge provider
    solvers:
      - http01:
          ingress:
            class: nginx
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # The ACME server URL
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: le-certs@sloothuizen.nl
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging
    # Enable the HTTP-01 challenge provider
    solvers:
      - http01:
          ingress:
            class: nginx
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: hhb-database-volume-${NAMESPACE}
  labels:
    name: hhb-database-volume-${NAMESPACE}
spec:
  storageClassName: default
  capacity:
    storage: 512Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: hhb-database-volumeclaim
  labels:
    name: hhb-database-volumeclaim
spec:
  storageClassName: default
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 512Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-dex-ingress
  labels:
    name: hhb-dex-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - ${HHB_FRONTEND_DNS}
      secretName: hhb-frontend-ingress-tls
  rules:
    - host: ${HHB_FRONTEND_DNS}
      http:
        paths:
          - path: /auth
            pathType: Prefix
            backend:
              service:
                name: hhb-dex
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-frontend-ingress
  labels:
    name: hhb-frontend-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: ${CERT_MANAGER_ISSUER}
spec:
  tls:
    - hosts:
        - ${HHB_FRONTEND_DNS}
      secretName: hhb-frontend-ingress-tls
  rules:
    - host: ${HHB_FRONTEND_DNS}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hhb-frontend
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-backend-ingress
  labels:
    name: hhb-backend-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts: 
        - ${HHB_FRONTEND_DNS}
      secretName: hhb-frontend-ingress-tls
  rules:
    - host: ${HHB_FRONTEND_DNS}
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: hhb-backend
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-unleashservice
  labels:
    name: hhb-unleashservice
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - ${HHB_HOST}
      secretName: hhb-frontend-ingress-tls
  rules:
    - host: ${HHB_HOST}
      http:
        paths:
          - path: /api/unleash
            pathType: Prefix
            backend:
              service:
                name: hhb-unleashservice
                port:
                  number: 80
