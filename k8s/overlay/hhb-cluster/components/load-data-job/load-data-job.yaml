apiVersion: batch/v1
kind: Job
metadata:
  name: load-data-job
spec:
  backoffLimit: 2
  template:
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-huishoudboekjeservice
        image: alpine/curl
        command: ['sh', '-c', 'until curl -s http://hhb-huishoudboekjeservice/health; do echo waiting for huishoudboekjeservice; sleep 2; done;']
      - name: wait-for-logservice
        image: alpine/curl
        command: ['sh', '-c', 'until curl -s http://hhb-logservice/health; do echo waiting for logservice; sleep 2; done;']
      - name: wait-for-organisatieservice
        image: alpine/curl
        command: ['sh', '-c', 'until curl -s http://hhb-organisatieservice/health; do echo waiting for organisatieservice; sleep 2; done;']
      - name: wait-for-postadressenservice
        image: alpine/curl
        command: ['sh', '-c', 'until curl -s http://hhb-postadressenservice/health; do echo waiting for postadressenservice; sleep 2; done;']
      containers:
      - name: load-data
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
          - |
            # echo "start"
            # sudo mkdir /data-files
            # echo "unzipping"
            # cp /configmap/* /data-files/
            # cd ./data-files
            # tar -xzvf huishoudboekje-data.tar.gz
            # tar xzvf log-data.tar.gz
            # tar -xzvf organisatie-data.tar.gz
            # tar -xzvf postadressen-data.tar.gz
            echo "restoring"
            # pg_restore  -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -d $POSTGRESQL_DATABASE_NAME_HHBSVC --data-only -F c ./data-files/huishoudboekje-data.out
            # pg_restore  -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -d $POSTGRESQL_DATABASE_NAME_LOGSVC --data-only -F c ./data-files/log-data.out
            pg_restore  -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -d $POSTGRESQL_DATABASE_NAME_ORGSVC --data-only -F c ./configmap/organisatie-data.out
            # pg_restore  -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -d $POSTGRESQL_DATABASE_NAME_PADSVC --data-only -F c ./data-files/postadressen-data.out
            echo "done"
            sleep 601;
        envFrom:
          - configMapRef:
              name: postgres-config
        volumeMounts:
            - name: data-files
              mountPath: /configmap
      volumes:
      - name: data-files
        projected:
          sources:
            - configMap:
                name: organisatie-data