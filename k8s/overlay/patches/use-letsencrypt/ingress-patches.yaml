apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-backend-ingress
  labels:
    name: hhb-backend-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - ${APP_HOST}
      secretName: medewerker-frontend-ingress-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-frontend-ingress
  labels:
    name: hhb-frontend-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - ${APP_HOST}
      secretName: medewerker-frontend-ingress-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-authservice-ingress
  labels:
    name: hhb-authservice-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - ${APP_HOST}
      secretName: medewerker-frontend-ingress-tls
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: hhb-backendburgers-ingress
#  labels:
#    name: hhb-backendburgers-ingress
#  annotations:
#    cert-manager.io/cluster-issuer: letsencrypt-prod
#spec:
#  tls:
#    - hosts:
#        - ${APP_HOST}
#      secretName: medewerker-frontend-ingress-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-unleashservice-ingress
  labels:
    name: hhb-unleashservice-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - ${APP_HOST}
      secretName: medewerker-frontend-ingress-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hhb-storybook-ingress
  labels:
    name: hhb-storybook-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - sb-${APP_HOST}
      secretName: medewerker-frontend-ingress-tls
