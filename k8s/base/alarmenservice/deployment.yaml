apiVersion: apps/v1
kind: Deployment
metadata:
  name: hhb-alarmenservice
  labels:
    name: hhb-alarmenservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-alarmenservice
  template:
    metadata:
      labels:
        name: hhb-alarmenservice
    spec:
      initContainers:
        - name: init1-wait-for-db
          image: busybox
          envFrom:
            - configMapRef:
                name: postgres-config
          command:
            [
                "sh",
                "-c",
                "while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint gonna wait for the database forever...; exit 1",
            ]
        - name: init2-prepare-db
          image: bitnami/postgresql:13
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hhb-database-secrets
                  key: POSTGRESQL_PASSWORD
            - name: POSTGRESQL_PASSWORD_ALMSVC
              valueFrom:
                secretKeyRef:
                  name: hhb-database-secrets
                  key: POSTGRESQL_PASSWORD_ALMSVC
          command: [ "/bin/sh" ]
          args:
            - -c
            - >-
              export PGPASSWORD=$POSTGRESQL_PASSWORD &&
              export PGPORT=$POSTGRESQL_PORT &&
              psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER $POSTGRESQL_USERNAME_ALMSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_ALMSVC'" || true &&
              psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE DATABASE $POSTGRESQL_DATABASE_NAME_ALMSVC" || true &&
              psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_ALMSVC TO $POSTGRESQL_USERNAME_ALMSVC" || true &&
              psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_ALMSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_ALMSVC'" || true;
        - name: init3-migrate-db
          image: alarmenservice
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: HHB_SECRET
              valueFrom:
                secretKeyRef:
                  name: hhb-client-secrets
                  key: SECRET_KEY
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: hhb-database-secrets
                  key: ALARMENSERVICE_DATABASE_URL
          command: ["npm"]
          args: ["run", "db:push"]
          volumeMounts:
            - mountPath: /app/node_modules/.prisma
              name: prisma-alarmenservice-init-3
            - mountPath: /app/node_modules/prisma
              name: app-node-modules-prisma-alarmenservice-init-3
            - mountPath: /.npm
              name: npm-alarmenservice-init-3
      containers:
        - name: hhb-alarmenservice
          image: alarmenservice
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: hhb-database-secrets
                  key: ALARMENSERVICE_DATABASE_URL
          volumeMounts:
            - mountPath: /app/node_modules/.prisma
              name: prisma-alarmenservice
            - mountPath: /.npm
              name: npm-alarmenservice
            - mountPath: /app/node_modules/prisma
              name: app-node-modules-prisma-alarmenservice
      volumes:
        - emptyDir: {}
          name: prisma-alarmenservice-init-3
        - emptyDir: {}
          name: prisma-alarmenservice
        - emptyDir: {}
          name: app-node-modules-prisma-alarmenservice-init-3
        - emptyDir: {}
          name: app-node-modules-prisma-alarmenservice
        - emptyDir: {}
          name: npm-alarmenservice-init-3
        - emptyDir: {}
          name: npm-alarmenservice