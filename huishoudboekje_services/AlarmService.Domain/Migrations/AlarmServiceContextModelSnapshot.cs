// <auto-generated />
using System;
using AlarmService.Domain.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AlarmService.Domain.Migrations
{
    [DbContext(typeof(AlarmServiceContext))]
    partial class AlarmServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AlarmService.Domain.Contexts.Alarm", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<int>("AmountMargin")
                        .HasColumnType("integer")
                        .HasColumnName("amount_margin");

                    b.Property<long?>("CheckOnDate")
                        .HasColumnType("bigint")
                        .HasColumnName("check_on_date");

                    b.Property<int>("DateMargin")
                        .HasColumnType("integer")
                        .HasColumnName("date_margin");

                    b.Property<long?>("EndDate")
                        .HasColumnType("bigint")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("RecurringDay")
                        .HasColumnType("text")
                        .HasColumnName("recurring_day");

                    b.Property<string>("RecurringDayOfMonth")
                        .HasColumnType("text")
                        .HasColumnName("recurring_day_of_month");

                    b.Property<string>("RecurringMonths")
                        .HasColumnType("text")
                        .HasColumnName("recurring_months");

                    b.Property<long>("StartDate")
                        .HasColumnType("bigint")
                        .HasColumnName("start_date");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Uuid");

                    b.HasIndex("StartDate");

                    b.HasIndex("Type");

                    b.ToTable("alarms");
                });

            modelBuilder.Entity("AlarmService.Domain.Contexts.AlarmType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("alarmtypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Monthly"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Weekly"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Once"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Yearly"
                        });
                });

            modelBuilder.Entity("AlarmService.Domain.Contexts.Signal", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("uuid");

                    b.Property<Guid?>("AgreementUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("agreement_uuid");

                    b.Property<Guid?>("AlarmUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("alarm_uuid");

                    b.Property<Guid?>("CitizenUuid")
                        .HasColumnType("uuid")
                        .HasColumnName("citizen_uuid");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("JournalEntryUuids")
                        .HasColumnType("text")
                        .HasColumnName("journal_entry_uuids");

                    b.Property<int>("OffByAmount")
                        .HasColumnType("integer")
                        .HasColumnName("off_by_amount");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<long?>("UpdatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_at");

                    b.HasKey("Uuid");

                    b.HasIndex("AlarmUuid");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Type");

                    b.ToTable("signals");
                });

            modelBuilder.Entity("AlarmService.Domain.Contexts.SignalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("signaltypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Date"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Amount"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MultipleTransactions"
                        },
                        new
                        {
                            Id = 4,
                            Name = "NegativeSaldo"
                        });
                });

            modelBuilder.Entity("AlarmService.Domain.Contexts.Alarm", b =>
                {
                    b.HasOne("AlarmService.Domain.Contexts.AlarmType", "AlarmType")
                        .WithMany()
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlarmType");
                });

            modelBuilder.Entity("AlarmService.Domain.Contexts.Signal", b =>
                {
                    b.HasOne("AlarmService.Domain.Contexts.Alarm", "Alarm")
                        .WithMany()
                        .HasForeignKey("AlarmUuid");

                    b.HasOne("AlarmService.Domain.Contexts.SignalType", "SignalType")
                        .WithMany()
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alarm");

                    b.Navigation("SignalType");
                });
#pragma warning restore 612, 618
        }
    }
}
