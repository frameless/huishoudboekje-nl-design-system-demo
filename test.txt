apiVersion: v1
data:
  logo.svg: |
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1129 136">
        <path fill="#0D00B3" d="M235.708 103.78906c8.35092 0 16.76759-1.84114 25.25-5.52344v-29.1953h-23.12939v8.77831h13.26612v14.35108l-.93702.2959c-5.49056 1.80826-10.2085 2.7124-14.1538 2.7124-8.12077 0-14.76205-2.48226-19.92383-7.44678-5.16179-4.96452-7.74268-11.35921-7.74268-19.18408 0-7.46322 2.5809-13.75928 7.74268-18.88819 5.16178-5.1289 11.50716-7.69335 19.03613-7.69335 8.0879 0 16.24154 2.38362 24.46094 7.15087V39.08594c-5.32617-2.23568-9.73177-3.7727-13.2168-4.61109-3.48502-.83838-7.16732-1.25756-11.04687-1.25756-10.65235 0-19.51286 3.41927-26.58155 10.2578-7.06868 6.83855-10.60302 15.40317-10.60302 25.69386 0 9.76464 3.41105 17.97583 10.23315 24.63354 6.8221 6.65771 15.93742 9.98657 27.34595 9.98657zm58.53858-.09863c3.64942 0 6.83032-.39453 9.54273-1.1836 2.7124-.78906 5.44946-2.10416 8.21118-3.9453V89.7832c-4.9974 3.6823-10.45508 5.52344-16.37305 5.52344-4.24121 0-7.70158-1.28223-10.3811-3.84668-2.67953-2.56445-4.13436-6.0166-4.3645-10.35644h31.90771v-1.13428c0-7.06869-1.79183-12.7072-5.37549-16.91553s-8.38379-6.3125-14.40039-6.3125c-6.24674 0-11.32633 2.1617-15.23877 6.4851-3.91243 4.32341-5.86865 9.93726-5.86865 16.84156 0 4.60287.9288 8.65503 2.78638 12.1565 1.85758 3.50146 4.33162 6.28784 7.42212 8.35913 3.0905 2.07129 7.13444 3.10693 12.13183 3.10693zm9.66602-27.9624h-22.8335c.62468-3.58366 1.96444-6.34538 4.01929-8.28516 2.05485-1.93978 4.69328-2.90967 7.91528-2.90967 3.222 0 5.78646.9699 7.69336 2.90967 1.9069 1.93978 2.97542 4.7015 3.20557 8.28516zM331.08594 103V70.05664c2.00553-2.16992 3.78914-3.6823 5.35083-4.5371 1.56168-.85483 3.27954-1.28224 5.15356-1.28224 3.35352 0 5.70427.99455 7.05225 2.98365 1.34798 1.9891 2.02197 5.49878 2.02197 10.52905V103h9.0249V70.05664c3.222-3.74805 6.6906-5.62207 10.40576-5.62207 2.89323 0 5.11247 1.00277 6.65772 3.0083 1.54525 2.00553 2.31787 4.89876 2.31787 8.67969V103h8.97559V76.2212c0-6.6084-1.42196-11.5236-4.26587-14.74561-2.84392-3.222-6.46867-4.83301-10.87427-4.83301-5.22754 0-10.24137 2.76172-15.0415 8.28515-3.15625-5.45768-7.61117-8.18652-13.36475-8.18652-4.37272 0-8.84408 2.285-13.41406 6.85498v-5.96728h-8.97559V103h8.97559zm89.41064.69043c3.64942 0 6.83032-.39453 9.54273-1.1836 2.7124-.78906 5.44946-2.10416 8.21118-3.9453V89.7832c-4.9974 3.6823-10.45508 5.52344-16.37305 5.52344-4.24121 0-7.70158-1.28223-10.3811-3.84668-2.67953-2.56445-4.13436-6.0166-4.3645-10.35644h31.90771v-1.13428c0-7.06869-1.79183-12.7072-5.37549-16.91553s-8.38379-6.3125-14.40039-6.3125c-6.24674 0-11.32633 2.1617-15.23877 6.4851-3.91243 4.32341-5.86865 9.93726-5.86865 16.84156 0 4.60287.9288 8.65503 2.78638 12.1565 1.85758 3.50146 4.33162 6.28784 7.42212 8.35913 3.0905 2.07129 7.13444 3.10693 12.13183 3.10693zm9.66602-27.9624h-22.8335c.62468-3.58366 1.96444-6.34538 4.01929-8.28516 2.05485-1.93978 4.69328-2.90967 7.91528-2.90967 3.222 0 5.78646.9699 7.69336 2.90967 1.9069 1.93978 2.97542 4.7015 3.20557 8.28516zm38.71338 27.9624c3.64941 0 6.83032-.39453 9.54272-1.1836 2.7124-.78906 5.44946-2.10416 8.21118-3.9453V89.7832c-4.9974 3.6823-10.45508 5.52344-16.37304 5.52344-4.24122 0-7.70158-1.28223-10.3811-3.84668-2.67953-2.56445-4.13437-6.0166-4.36451-10.35644h31.90771v-1.13428c0-7.06869-1.79182-12.7072-5.37548-16.91553-3.58366-4.20833-8.3838-6.3125-14.4004-6.3125-6.24674 0-11.32633 2.1617-15.23876 6.4851-3.91244 4.32341-5.86865 9.93726-5.86865 16.84156 0 4.60287.92879 8.65503 2.78637 12.1565 1.85759 3.50146 4.33163 6.28784 7.42212 8.35913 3.0905 2.07129 7.13444 3.10693 12.13184 3.10693zm9.66601-27.9624h-22.8335c.62468-3.58366 1.96444-6.34538 4.0193-8.28516 2.05484-1.93978 4.69327-2.90967 7.91528-2.90967 3.222 0 5.78645.9699 7.69336 2.90967 1.9069 1.93978 2.97542 4.7015 3.20556 8.28516zM506.10986 103V70.59912c2.95899-4.24121 6.55908-6.36182 10.8003-6.36182 3.32063 0 5.68782.99455 7.10156 2.98365 1.41374 1.9891 2.1206 5.30151 2.1206 9.93725V103h8.97559V77.05957c0-5.52344-.6329-9.55916-1.89868-12.10718-1.26579-2.54801-3.11515-4.55355-5.5481-6.0166-2.43294-1.46305-5.06315-2.19458-7.89062-2.19458-5.09603 0-9.64958 2.21924-13.66065 6.65772V57.6289h-9.17285V103h9.17285zm57.4043.78906c4.07682 0 7.8413-.96989 11.29346-2.90967v-8.38378c-3.58366 2.16992-6.9865 3.25488-10.2085 3.25488-4.30696 0-6.46045-2.59733-6.46045-7.792V65.7168h14.35108v-8.08788h-14.35108v-9.37012l-16.8662 16.57031v.8877h7.89062l.00077 20.57228c.01349 3.8631.20228 6.49908.56637 7.90794.37809 1.46305.8466 2.64665 1.40551 3.55078.55892.90414 1.26579 1.71786 2.1206 2.44116 2.72885 2.40007 6.14812 3.6001 10.25782 3.6001zm37.875-.09863c3.64941 0 6.83032-.39453 9.54273-1.1836 2.7124-.78906 5.44946-2.10416 8.21118-3.9453V89.7832c-4.9974 3.6823-10.45508 5.52344-16.37305 5.52344-4.24121 0-7.70158-1.28223-10.3811-3.84668-2.67953-2.56445-4.13436-6.0166-4.3645-10.35644h31.9077v-1.13428c0-7.06869-1.79182-12.7072-5.37548-16.91553-3.58366-4.20833-8.38379-6.3125-14.40039-6.3125-6.24675 0-11.32633 2.1617-15.23877 6.4851-3.91243 4.32341-5.86865 9.93726-5.86865 16.84156 0 4.60287.92879 8.65503 2.78638 12.1565 1.85758 3.50146 4.33162 6.28784 7.42211 8.35913 3.0905 2.07129 7.13444 3.10693 12.13184 3.10693zm9.66602-27.9624h-22.8335c.62467-3.58366 1.96444-6.34538 4.01929-8.28516 2.05485-1.93978 4.69328-2.90967 7.91528-2.90967 3.222 0 5.78646.9699 7.69336 2.90967 1.9069 1.93978 2.97542 4.7015 3.20557 8.28516zm63.32226 28.06103c5.91797 0 10.72632-1.72607 14.42505-5.17822 3.69873-3.45215 5.5481-7.93994 5.5481-13.46338 0-7.75911-4.20834-14.13737-12.625-19.13476l-7.54541-4.43848c-3.3864-1.97266-5.83578-3.86312-7.34815-5.67139-1.51237-1.80827-2.26855-3.74804-2.26855-5.81933 0-2.33431 1.03564-4.24943 3.10693-5.74537 2.07129-1.49593 4.71794-2.2439 7.93994-2.2439 5.7207 0 11.06331 2.38363 16.02783 7.15089V38.05029c-4.80013-3.222-10.07698-4.833-15.83056-4.833-6.0166 0-10.90715 1.6932-14.67163 5.07959-3.76449 3.38639-5.64673 7.79199-5.64673 13.2168 0 3.61653.99455 6.81388 2.98364 9.59203 1.9891 2.77816 5.3344 5.59741 10.03589 8.45777l7.4961 4.5371c6.04947 3.74805 9.07421 7.72624 9.07421 11.93458 0 2.59733-1.02742 4.75903-3.08227 6.4851-2.05485 1.72608-4.62753 2.58912-7.71802 2.58912-7.00293 0-13.16748-3.36996-18.49365-10.10987v12.52637c5.58919 4.17545 11.78662 6.26318 18.59228 6.26318zM713.14014 103V34.10498h-8.97559V103h8.97559zm34.2749.78906c7.0358 0 12.87158-2.1617 17.50732-6.4851 4.63574-4.32341 6.95362-9.75643 6.95362-16.29908 0-6.7399-2.285-12.33732-6.85498-16.79223-4.57-4.45492-10.30713-6.68238-17.21143-6.68238-6.97005 0-12.76473 2.21102-17.38403 6.63306-4.6193 4.42204-6.92896 9.9537-6.92896 16.59497 0 6.57552 2.285 12.05786 6.85498 16.44702 4.56999 4.38916 10.25782 6.58374 17.06348 6.58374zm.2959-8.38379c-4.43848 0-8.07145-1.37264-10.89893-4.11792-2.82747-2.74528-4.2412-6.28784-4.2412-10.62768 0-4.37272 1.38085-7.97282 4.14257-10.8003 2.76172-2.82747 6.29606-4.2412 10.60303-4.2412 4.43847 0 8.12076 1.41373 11.04687 4.2412 2.9261 2.82748 4.38916 6.3947 4.38916 10.70167 0 4.33984-1.40552 7.89884-4.21655 10.677-2.81104 2.77815-6.41935 4.16723-10.82495 4.16723zm55.43164 8.3838c7.0358 0 12.87158-2.16171 17.50732-6.48511 4.63575-4.32341 6.95362-9.75643 6.95362-16.29908 0-6.7399-2.285-12.33732-6.85499-16.79223-4.56998-4.45492-10.30712-6.68238-17.21142-6.68238-6.97005 0-12.76473 2.21102-17.38403 6.63306-4.6193 4.42204-6.92896 9.9537-6.92896 16.59497 0 6.57552 2.285 12.05786 6.85498 16.44702 4.56999 4.38916 10.25781 6.58374 17.06348 6.58374zm.2959-8.3838c-4.43848 0-8.07146-1.37264-10.89893-4.11792-2.82747-2.74528-4.24121-6.28784-4.24121-10.62768 0-4.37272 1.38086-7.97282 4.14258-10.8003 2.76172-2.82747 6.29606-4.2412 10.60303-4.2412 4.43847 0 8.12076 1.41373 11.04687 4.2412 2.9261 2.82748 4.38916 6.3947 4.38916 10.70167 0 4.33984-1.40552 7.89884-4.21655 10.677-2.81104 2.77815-6.41935 4.16723-10.82495 4.16723zm50.00683 8.3838c4.07683 0 7.84131-.9699 11.29346-2.90967v-8.3838c-3.58366 2.16993-6.9865 3.25489-10.2085 3.25489-4.30696 0-6.46045-2.59733-6.46045-7.792V65.7168h14.35108v-8.08788h-14.35108v-9.37012l-16.8662 16.57031v.8877h7.89062v20.1211c0 4.1097.18904 6.89607.56714 8.35912.37809 1.46305.8466 2.64665 1.40552 3.55078.55891.90414 1.26578 1.71786 2.1206 2.44116 2.72884 2.40007 6.14811 3.6001 10.25781 3.6001zM879.97754 103V70.50049c2.10417-2.36719 4.0275-4.06039 5.77002-5.0796 1.74251-1.0192 3.6001-1.5288 5.57275-1.5288 2.66309 0 4.80835 1.01099 6.4358 3.03296 1.62743 2.02197 2.44116 4.69328 2.44116 8.01391V103h8.97558V77.1582c0-5.26041-.58358-9.22216-1.75073-11.88525-1.16716-2.66309-2.95077-4.75081-5.35083-6.26318-2.40007-1.51237-5.11247-2.26856-8.1372-2.26856-5.55632 0-10.2085 2.285-13.95655 6.85498V34.105h-8.97559v68.89501h8.97559zm56.76318.78906c2.43295 0 4.8741-.57536 7.32349-1.72607 2.44938-1.15072 4.62752-2.76172 6.53442-4.83301V103h8.97559V57.6289h-8.97559v32.4502c-2.99186 4.17546-6.62483 6.26319-10.89892 6.26319-3.41927 0-5.81112-.94524-7.17554-2.8357s-2.04663-5.21932-2.04663-9.98657V57.62891h-8.97559v25.98974c0 5.68783.61646 9.75643 1.84937 12.20581 1.2329 2.44938 3.05762 4.38916 5.47412 5.81934s5.05493 2.14526 7.91528 2.14526zm40.09424-54.64258c1.4795 0 2.74528-.52604 3.79736-1.57812 1.05209-1.05208 1.57813-2.30143 1.57813-3.74805 0-1.47949-.52604-2.72884-1.57813-3.74804-1.05208-1.01921-2.31787-1.52881-3.79736-1.52881-1.38086 0-2.59733.53426-3.64941 1.60278-1.05209 1.06852-1.57813 2.29321-1.57813 3.67407 0 1.41374.52604 2.65487 1.57813 3.7234 1.05208 1.06851 2.26855 1.60277 3.64941 1.60277zM981.37207 103V57.6289h-8.97559V103h8.97559zm47.4917 0v-8.38379h-24.01709l24.01709-36.9873h-38.7627v8.38379h22.8335L989.11475 103h39.74902zm27.71582.69043c3.64941 0 6.83032-.39453 9.54272-1.1836 2.71241-.78906 5.44947-2.10416 8.21119-3.9453V89.7832c-4.9974 3.6823-10.45508 5.52344-16.37305 5.52344-4.24121 0-7.70158-1.28223-10.3811-3.84668-2.67953-2.56445-4.13436-6.0166-4.36451-10.35644h31.90772v-1.13428c0-7.06869-1.79183-12.7072-5.37549-16.91553s-8.38379-6.3125-14.40039-6.3125c-6.24675 0-11.32633 2.1617-15.23877 6.4851-3.91243 4.32341-5.86865 9.93726-5.86865 16.84156 0 4.60287.92879 8.65503 2.78637 12.1565 1.85759 3.50146 4.33163 6.28784 7.42212 8.35913 3.0905 2.07129 7.13444 3.10693 12.13184 3.10693zm9.66602-27.9624h-22.8335c.62467-3.58366 1.96444-6.34538 4.01929-8.28516 2.05485-1.93978 4.69327-2.90967 7.91528-2.90967 3.222 0 5.78646.9699 7.69336 2.90967 1.9069 1.93978 2.97542 4.7015 3.20557 8.28516zM1093.81348 103V70.59912c2.95898-4.24121 6.55908-6.36182 10.80029-6.36182 3.32064 0 5.68783.99455 7.10156 2.98365 1.41374 1.9891 2.12061 5.30151 2.12061 9.93725V103h8.97558V77.05957c0-5.52344-.63289-9.55916-1.89868-12.10718-1.26579-2.54801-3.11515-4.55355-5.54809-6.0166-2.43295-1.46305-5.06315-2.19458-7.89063-2.19458-5.09603 0-9.64958 2.21924-13.66064 6.65772V57.6289h-9.17286V103h9.17286z" />
        <g fill="#FF8084">
            <path d="M43.13351 0l43.13352 43.13351L73.573 55.828 43.13351 25.38873 12.694 55.827 0 43.13351zM74.464 81l11.80303 11.80282-43.13352 43.1335L0 92.80283 11.802 81l31.33151 31.3301z"/>
            <path d="M43.13351 43l25.45585 25.45584L43.1335 93.91168 17.67767 68.45584z"/>
        </g>
        <rect width="6" height="136" x="137" fill="#0D00B3" rx="3"/>
    </svg>
  theme.js: "// This is the name of your application. It will appear in the application
    in various messages.\nconst tenantName = \"Gemeente Sloothuizen\";\n\nconst primary
    = {\n\t50: \"#e7e4ff\",\n\t100: \"#b7b3ff\",\n\t200: \"#8980ff\",\n\t300: \"#594dff\",\n\t400:
    \"#2c1bfe\",\n\t500: \"#1401e5\",\n\t600: \"#0d00b3\",\n\t700: \"#070081\",\n\t800:
    \"#030050\",\n\t900: \"#010020\",\n};\n\nconst secondary = {\n\t50: \"#ffe2e4\",\n\t100:
    \"#ffb2b4\",\n\t200: \"#ff8084\",\n\t300: \"#fe4e53\",\n\t400: \"#fe2023\",\n\t500:
    \"#e50a0a\",\n\t600: \"#b20307\",\n\t700: \"#800004\",\n\t800: \"#4e0000\",\n\t900:
    \"#1f0000\",\n};\n\nwindow.branding = {\n\ttenantName,\n\tcolors: {\n\t\tprimary,\n\t\tsecondary,\n\t\tblue:
    primary,\n\t\tred: secondary,\n\t},\n};\n"
kind: ConfigMap
metadata:
  labels:
    name: hhb-theme
  name: hhb-theme
---
apiVersion: v1
data:
  POSTGRESQL_DATABASE: postgres
  POSTGRESQL_DATABASE_NAME_ALMSVC: alarmenservice
  POSTGRESQL_DATABASE_NAME_BKTSVC: banktransactieservice
  POSTGRESQL_DATABASE_NAME_GRBSVC: grootboekservice
  POSTGRESQL_DATABASE_NAME_HHBSVC: huishoudboekjeservice
  POSTGRESQL_DATABASE_NAME_LOGSVC: logservice
  POSTGRESQL_DATABASE_NAME_ORGSVC: organisatieservice
  POSTGRESQL_DATABASE_NAME_PADSVC: postadressenservice
  POSTGRESQL_DATABASE_NAME_SIGSVC: signalenservice
  POSTGRESQL_HOSTNAME: hhb-database
  POSTGRESQL_PORT: "5432"
  POSTGRESQL_USERNAME: postgres
  POSTGRESQL_USERNAME_ALMSVC: almsvc
  POSTGRESQL_USERNAME_BKTSVC: bktsvc
  POSTGRESQL_USERNAME_GRBSVC: grbsvc
  POSTGRESQL_USERNAME_HHBSVC: hhbsvc
  POSTGRESQL_USERNAME_LOGSVC: logsvc
  POSTGRESQL_USERNAME_ORGSVC: orgsvc
  POSTGRESQL_USERNAME_PADSVC: padsvc
  POSTGRESQL_USERNAME_SIGSVC: sigsvc
kind: ConfigMap
metadata:
  name: postgres-config-9tfbt78852
---
apiVersion: v1
data:
  prometheus.yml: |-
    global:
      scrape_interval: 5s
    scrape_configs:
      - job_name: 'hhb-statsd-exporter'
        static_configs:
          - targets: ['hhb-statsd-exporter:9102']
kind: ConfigMap
metadata:
  name: prometheus-config
---
apiVersion: v1
data:
  UNLEASH_OTAP: production
kind: ConfigMap
metadata:
  name: unleash-config-c7cg5bk6bk
---
apiVersion: v1
data:
  JWT_ALGORITHMS: SFMyNTY=
  JWT_AUDIENCE: ""
  JWT_EXPIRES_IN: MzBk
  JWT_ISSUER: ""
  JWT_SECRET: dGhpcyBzaG91bGQgY29tZSBmcm9tIGEgc2VjcmV0IGVudnZhcg==
  OIDC_BASE_URL: ""
  OIDC_CLIENT_ID: dGhpcyBzaG91bGQgY29tZSBmcm9tIGEgc2VjcmV0IGVudnZhcg==
  OIDC_CLIENT_SECRET: dGhpcyBzaG91bGQgY29tZSBmcm9tIGEgc2VjcmV0IGVudnZhcg==
  OIDC_ISSUER_URL: dGhpcyBzaG91bGQgYmUgYSBpc3N1ZXIgdXJs
  OIDC_SCOPES: ""
kind: Secret
metadata:
  name: authservice-config-866dkct586
type: Opaque
---
apiVersion: v1
data:
  ALARMENSERVICE_DATABASE_URL: |
    cG9zdGdyZXNxbDovL2FsbXN2YzphbG1zdmNAaGhiLWRhdGFiYXNlOjU0MzIvYWxhcm1lbn
    NlcnZpY2U=
  GROOTBOEKSERVICE_DATABASE_URL: |
    cG9zdGdyZXNxbDovL2dyYnN2YzpncmJzdmNAaGhiLWRhdGFiYXNlOjU0MzIvZ3Jvb3Rib2
    Vrc2VydmljZQ==
  HUISHOUDBOEKJESERVICE_DATABASE_URL: |
    cG9zdGdyZXNxbDovL2hoYnN2YzpoaGJzdmNAaGhiLWRhdGFiYXNlOjU0MzIvaHVpc2hvdW
    Rib2VramVzZXJ2aWNl
  LOGSERVICE_DATABASE_URL: |
    cG9zdGdyZXNxbDovL2xvZ3N2Yzpsb2dzdmNAaGhiLWRhdGFiYXNlOjU0MzIvbG9nc2Vydm
    ljZQ==
  ORGANISATIESERVICE_DATABASE_URL: |
    cG9zdGdyZXNxbDovL29yZ3N2YzpvcmdzdmNAaGhiLWRhdGFiYXNlOjU0MzIvb3JnYW5pc2
    F0aWVzZXJ2aWNl
  POSTADRESSENSERVICE_DATABASE_URL: |
    cG9zdGdyZXNxbDovL3BhZHN2YzpwYWRzdmNAaGhiLWRhdGFiYXNlOjU0MzIvcG9zdGFkcm
    Vzc2Vuc2VydmljZQ==
  POSTGRESQL_PASSWORD: cG9zdGdyZXM=
  POSTGRESQL_PASSWORD_ALMSVC: YWxtc3Zj
  POSTGRESQL_PASSWORD_BKTSVC: Ymt0c3Zj
  POSTGRESQL_PASSWORD_GRBSVC: Z3Jic3Zj
  POSTGRESQL_PASSWORD_HHBSVC: aGhic3Zj
  POSTGRESQL_PASSWORD_LOGSVC: bG9nc3Zj
  POSTGRESQL_PASSWORD_ORGSVC: b3Jnc3Zj
  POSTGRESQL_PASSWORD_PADSVC: cGFkc3Zj
  POSTGRESQL_PASSWORD_SIGSVC: c2lnc3Zj
  SIGNALENSERVICE_DATABASE_URL: |
    cG9zdGdyZXNxbDovL3NpZ3N2YzpzaWdzdmNAaGhiLWRhdGFiYXNlOjU0MzIvc2lnbmFsZW
    5zZXJ2aWNl
  TRANSACTIESERVICE_DATABASE_URL: |
    cG9zdGdyZXNxbDovL2JrdHN2Yzpia3RzdmNAaGhiLWRhdGFiYXNlOjU0MzIvYmFua3RyYW
    5zYWN0aWVzZXJ2aWNl
kind: Secret
metadata:
  name: hhb-database-secrets-chmg6bh6bd
type: Opaque
---
apiVersion: v1
data:
  redis.conf: |
    cmVxdWlyZXBhc3MgImF2ZXJ5aW5zZWN1cmVidXRzdGlsbGFsb25ncGFzc3dvcmRiZWNhdX
    NldGhlZG9jc3NheWl0aGFzdG9iZWFsb25ncGFzd29yZHRvYmVzZWN1cmVzb2lob3BldGhp
    c2lzbG9uZ2Vub3VnaCINCnVzZXIgYXV0aHNlcnZpY2UgK0BhbGwgfiogb24gPmF1dGhzZX
    J2aWNlcGFzc3dvcmRmb3JyZWRpczEyMzQ1DQo=
kind: Secret
metadata:
  name: redis-config-file-9fdg29t689
type: Opaque
---
apiVersion: v1
data:
  REDIS_URL: |
    cmVkaXM6Ly9hdXRoc2VydmljZTphdXRoc2VydmljZXBhc3N3b3JkZm9ycmVkaXMxMjM0NU
    BoaGItcmVkaXM6NjM3OQ==
kind: Secret
metadata:
  name: redis-url-dm9mhk47bd
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-alarmenservice
  name: hhb-alarmenservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-alarmenservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-authservice
  name: hhb-authservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-authservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-backend
  name: hhb-backend
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-backend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-banktransactieservice
  name: hhb-banktransactieservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-banktransactieservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-database
  name: hhb-database
spec:
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    name: hhb-database
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-database-mesh
  name: hhb-database-mesh
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-database-mesh
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-frontend
  name: hhb-frontend
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-frontend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-grootboekservice
  name: hhb-grootboekservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-grootboekservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-huishoudboekjeservice
  name: hhb-huishoudboekjeservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-huishoudboekjeservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-logservice
  name: hhb-logservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-logservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-organisatieservice
  name: hhb-organisatieservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-organisatieservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-postadressenservice
  name: hhb-postadressenservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-postadressenservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-prometheus
  name: hhb-prometheus
spec:
  ports:
  - name: prometheus
    port: 80
    protocol: TCP
    targetPort: prometheus
  selector:
    name: hhb-prometheus
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-rapportageservice
  name: hhb-rapportageservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-rapportageservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-redis
  name: hhb-redis
spec:
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    name: hhb-redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-signalenservice
  name: hhb-signalenservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-signalenservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-statsd-exporter
  name: hhb-statsd-exporter
spec:
  ports:
  - name: metrics
    port: 9102
    protocol: TCP
    targetPort: metrics
  - name: statsd
    port: 9125
    protocol: UDP
    targetPort: statsd
  selector:
    name: hhb-statsd-exporter
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: hhb-unleashservice
  name: hhb-unleashservice
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    name: hhb-unleashservice
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    name: hhb-database-pvc
  name: hhb-database-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
  storageClassName: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-alarmenservice
  name: hhb-alarmenservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-alarmenservice
  template:
    metadata:
      labels:
        name: hhb-alarmenservice
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: ALARMENSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/alarmenservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-alarmenservice
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 256Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME
          $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint
          gonna wait for the database forever...; exit 1
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: busybox
        name: init1-wait-for-db
      - args:
        - -c
        - export PGPASSWORD=$POSTGRESQL_PASSWORD && export PGPORT=$POSTGRESQL_PORT
          && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER
          $POSTGRESQL_USERNAME_ALMSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_ALMSVC'"
          || true && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE
          DATABASE $POSTGRESQL_DATABASE_NAME_ALMSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_ALMSVC
          TO $POSTGRESQL_USERNAME_ALMSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_ALMSVC WITH
          PASSWORD '$POSTGRESQL_PASSWORD_ALMSVC'" || true;
        command:
        - /bin/sh
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD_ALMSVC
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_ALMSVC
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: init2-prepare-db
      - args:
        - run
        - db:deploy
        command:
        - npm
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: ALARMENSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/alarmenservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        name: init3-migrate-db
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-authservice
  name: hhb-authservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-authservice
  template:
    metadata:
      labels:
        name: hhb-authservice
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: INFO
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              key: REDIS_URL
              name: redis-url-dm9mhk47bd
        envFrom:
        - secretRef:
            name: authservice-config-866dkct586
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/authservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-authservice
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 256Mi
        startupProbe:
          failureThreshold: 100
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-backend
  name: hhb-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-backend
  template:
    metadata:
      labels:
        name: hhb-backend
    spec:
      containers:
      - env:
        - name: GUNICORN_WORKERS
          value: "1"
        - name: GUNICORN_THREADS
          value: "2"
        - name: JWT_AUDIENCE
          valueFrom:
            secretKeyRef:
              key: JWT_AUDIENCE
              name: authservice-config-866dkct586
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: authservice-config-866dkct586
        - name: JWT_ALGORITHMS
          valueFrom:
            secretKeyRef:
              key: JWT_ALGORITHMS
              name: authservice-config-866dkct586
        - name: JWT_ISSUER
          valueFrom:
            secretKeyRef:
              key: JWT_ISSUER
              name: authservice-config-866dkct586
        - name: PREFIX
          value: /api
        - name: HHB_SERVICE_URL
          value: http://hhb-huishoudboekjeservice
        - name: ORGANISATIE_SERVICE_URL
          value: http://hhb-organisatieservice
        - name: TRANSACTIE_SERVICE_URL
          value: http://hhb-banktransactieservice
        - name: GROOTBOEK_SERVICE_URL
          value: http://hhb-grootboekservice
        - name: LOG_SERVICE_URL
          value: http://hhb-logservice
        - name: POSTADRESSENSERVICE_URL
          value: http://hhb-postadressenservice
        - name: ALARMENSERVICE_URL
          value: http://hhb-alarmenservice
        - name: SIGNALENSERVICE_URL
          value: http://hhb-signalenservice
        - name: UNLEASHSERVICE_URL
          value: http://hhb-unleashservice
        - name: RAPPORTAGE_SERVICE_URL
          value: http://hhb-rapportageservice
        - name: USE_GRAPHIQL
          value: "0"
        - name: LOG_LEVEL
          value: INFO
        - name: STATSD_HOST
          value: hhb-statsd-exporter:9125
        - name: ALLOW_INTROSPECTION
          value: "1"
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/backend:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          periodSeconds: 10
        name: hhb-backend
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /api/health
            port: http
          periodSeconds: 10
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-banktransactieservice
  name: hhb-banktransactieservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-banktransactieservice
  template:
    metadata:
      labels:
        name: hhb-banktransactieservice
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: TRANSACTIESERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        - name: STATSD_HOST
          value: hhb-statsd-exporter:9125
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/banktransactieservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-banktransactieservice
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 128Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME
          $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint
          gonna wait for the database forever...; exit 1
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: busybox
        name: init1-wait-for-db
      - args:
        - -c
        - export PGPASSWORD=$POSTGRESQL_PASSWORD && export PGPORT=$POSTGRESQL_PORT
          && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER
          $POSTGRESQL_USERNAME_BKTSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_BKTSVC'"
          || true && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE
          DATABASE $POSTGRESQL_DATABASE_NAME_BKTSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_BKTSVC
          TO $POSTGRESQL_USERNAME_BKTSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_BKTSVC WITH
          PASSWORD '$POSTGRESQL_PASSWORD_BKTSVC'" || true;
        command:
        - /bin/sh
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD_BKTSVC
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_BKTSVC
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: init2-prepare-db
      - args:
        - db
        - upgrade
        command:
        - flask
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: TRANSACTIESERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/banktransactieservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        name: init3-migrate-db
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-database
  name: hhb-database
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-database
  template:
    metadata:
      labels:
        name: hhb-database
    spec:
      containers:
      - env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: hhb-database
        ports:
        - containerPort: 5432
        resources:
          limits:
            memory: 256Mi
          requests:
            memory: 256Mi
        volumeMounts:
        - mountPath: /bitnami/postgresql
          name: hhb-database-volume
      initContainers:
      - args:
        - -R
        - 1001:1001
        - /bitnami/postgresql
        command:
        - chown
        image: busybox
        name: init-chown-bitnami-postgresql
        volumeMounts:
        - mountPath: /bitnami/postgresql
          name: hhb-database-volume
      nodeSelector:
        deployment: review
      volumes:
      - name: hhb-database-volume
        persistentVolumeClaim:
          claimName: hhb-database-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-database-mesh
  name: hhb-database-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-database-mesh
  template:
    metadata:
      labels:
        name: hhb-database-mesh
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: hhb-database
        image: databasemesh
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: http
          periodSeconds: 10
        name: hhb-database-mesh
        ports:
        - containerPort: 4000
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readiness
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 1000Mi
          requests:
            memory: 512Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /healthcheck
            port: http
          periodSeconds: 10
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-frontend
  name: hhb-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-frontend
  template:
    metadata:
      labels:
        name: hhb-frontend
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: INFO
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/frontend:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          periodSeconds: 10
        name: hhb-frontend
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 32Mi
          requests:
            cpu: 10m
            memory: 32Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /healthz
            port: http
          periodSeconds: 10
        volumeMounts:
        - mountPath: /opt/bitnami/apps/html/theme
          name: theme-volume
      nodeSelector:
        deployment: review
      volumes:
      - configMap:
          name: hhb-theme
        name: theme-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-grootboekservice
  name: hhb-grootboekservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-grootboekservice
  template:
    metadata:
      labels:
        name: hhb-grootboekservice
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: GROOTBOEKSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        - name: STATSD_HOST
          value: hhb-statsd-exporter:9125
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/grootboekservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-grootboekservice
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 256Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME
          $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint
          gonna wait for the database forever...; exit 1
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: busybox
        name: init1-wait-for-db
      - args:
        - -c
        - export PGPASSWORD=$POSTGRESQL_PASSWORD && export PGPORT=$POSTGRESQL_PORT
          && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER
          $POSTGRESQL_USERNAME_GRBSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_GRBSVC'"
          || true && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE
          DATABASE $POSTGRESQL_DATABASE_NAME_GRBSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_GRBSVC
          TO $POSTGRESQL_USERNAME_GRBSVC" || true  && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_GRBSVC WITH
          PASSWORD '$POSTGRESQL_PASSWORD_GRBSVC'" || true;
        command:
        - /bin/sh
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD_GRBSVC
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_GRBSVC
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: init2-prepare-db
      - args:
        - db
        - upgrade
        command:
        - flask
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: GROOTBOEKSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/grootboekservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        name: init3-migrate-db
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-huishoudboekjeservice
  name: hhb-huishoudboekjeservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-huishoudboekjeservice
  template:
    metadata:
      labels:
        name: hhb-huishoudboekjeservice
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: HUISHOUDBOEKJESERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        - name: STATSD_HOST
          value: hhb-statsd-exporter:9125
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/huishoudboekjeservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-huishoudboekjeservice
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 256Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME
          $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint
          gonna wait for the database forever...; exit 1
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: busybox
        name: init1-wait-for-db
      - args:
        - -c
        - export PGPASSWORD=$POSTGRESQL_PASSWORD && export PGPORT=$POSTGRESQL_PORT
          && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER
          $POSTGRESQL_USERNAME_HHBSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_HHBSVC'"
          || true && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE
          DATABASE $POSTGRESQL_DATABASE_NAME_HHBSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_HHBSVC
          TO $POSTGRESQL_USERNAME_HHBSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_HHBSVC WITH
          PASSWORD '$POSTGRESQL_PASSWORD_HHBSVC'" || true;
        command:
        - /bin/sh
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD_HHBSVC
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_HHBSVC
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: init2-prepare-db
      - args:
        - -c
        - |
          flask db upgrade
          flask seed-db-with-test-data
        command:
        - /bin/sh
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: HUISHOUDBOEKJESERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: SEED_TESTDATA
          value: "true"
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/huishoudboekjeservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        name: init3-migrate-db
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-logservice
  name: hhb-logservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-logservice
  template:
    metadata:
      labels:
        name: hhb-logservice
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: LOGSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        - name: STATSD_HOST
          value: hhb-statsd-exporter:9125
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/logservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-logservice
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 128Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME
          $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint
          gonna wait for the database forever...; exit 1
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: busybox
        name: init1-wait-for-db
      - args:
        - -c
        - export PGPASSWORD=$POSTGRESQL_PASSWORD && export PGPORT=$POSTGRESQL_PORT
          && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER
          $POSTGRESQL_USERNAME_LOGSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_LOGSVC'"
          || true && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE
          DATABASE $POSTGRESQL_DATABASE_NAME_LOGSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_LOGSVC
          TO $POSTGRESQL_USERNAME_LOGSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_LOGSVC WITH
          PASSWORD '$POSTGRESQL_PASSWORD_LOGSVC'" || true;
        command:
        - /bin/sh
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD_LOGSVC
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_LOGSVC
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: init2-prepare-db
      - args:
        - db
        - upgrade
        command:
        - flask
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: LOGSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/logservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        name: init3-migrate-db
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-organisatieservice
  name: hhb-organisatieservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-organisatieservice
  template:
    metadata:
      labels:
        name: hhb-organisatieservice
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: ORGANISATIESERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        - name: STATSD_HOST
          value: hhb-statsd-exporter:9125
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/organisatieservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-organisatieservice
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 128Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME
          $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint
          gonna wait for the database forever...; exit 1
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: busybox
        name: init1-wait-for-db
      - args:
        - -c
        - export PGPASSWORD=$POSTGRESQL_PASSWORD && export PGPORT=$POSTGRESQL_PORT
          && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER
          $POSTGRESQL_USERNAME_ORGSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_ORGSVC'"
          || true && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE
          DATABASE $POSTGRESQL_DATABASE_NAME_ORGSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_ORGSVC
          TO $POSTGRESQL_USERNAME_ORGSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_ORGSVC WITH
          PASSWORD '$POSTGRESQL_PASSWORD_ORGSVC'" || true;
        command:
        - /bin/sh
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD_ORGSVC
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_ORGSVC
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: init2-prepare-db
      - args:
        - -c
        - |
          flask db upgrade
          flask seed-db-with-test-data
        command:
        - /bin/sh
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: ORGANISATIESERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: SEED_TESTDATA
          value: "true"
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/organisatieservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        name: init3-migrate-db
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-postadressenservice
  name: hhb-postadressenservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-postadressenservice
  template:
    metadata:
      labels:
        name: hhb-postadressenservice
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: POSTADRESSENSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/postadressenservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-postadressenservice
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 400Mi
          requests:
            cpu: 50m
            memory: 400Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME
          $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint
          gonna wait for the database forever...; exit 1
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: busybox
        name: init1-wait-for-db
      - args:
        - -c
        - export PGPASSWORD=$POSTGRESQL_PASSWORD && export PGPORT=$POSTGRESQL_PORT
          && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER
          $POSTGRESQL_USERNAME_PADSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_PADSVC'"
          || true && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE
          DATABASE $POSTGRESQL_DATABASE_NAME_PADSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_PADSVC
          TO $POSTGRESQL_USERNAME_PADSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_PADSVC WITH
          PASSWORD '$POSTGRESQL_PASSWORD_PADSVC'" || true;
        command:
        - /bin/sh
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD_PADSVC
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_PADSVC
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: init2-prepare-db
      - args:
        - -c
        - |
          npm run db:deploy
          npm run seed-test-data
        command:
        - /bin/sh
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: POSTADRESSENSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: SEED_TESTDATA
          value: "true"
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/postadressenservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        name: init3-migrate-db
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-prometheus
  name: hhb-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-prometheus
  template:
    metadata:
      labels:
        name: hhb-prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        image: prom/prometheus:latest
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          name: prometheus
          protocol: TCP
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /etc/prometheus
          name: config-volume
      nodeSelector:
        deployment: review
      volumes:
      - configMap:
          name: prometheus-config
        name: config-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-rapportageservice
  name: hhb-rapportageservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-rapportageservice
  template:
    metadata:
      labels:
        name: hhb-rapportageservice
    spec:
      containers:
      - env:
        - name: HHB_SERVICE_URL
          value: http://hhb-huishoudboekjeservice
        - name: TRANSACTIE_SERVICE_URL
          value: http://hhb-banktransactieservice
        - name: LOG_LEVEL
          value: INFO
        - name: STATSD_HOST
          value: hhb-statsd-exporter:9125
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/rapportageservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-rapportageservice
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 256Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers: []
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-redis
  name: hhb-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-redis
  template:
    metadata:
      labels:
        name: hhb-redis
    spec:
      containers:
      - command:
        - redis-server
        - /redis-master/redis.conf
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        name: hhb-redis
        ports:
        - containerPort: 6379
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /redis-master
          name: config-volume
      nodeSelector:
        deployment: review
      volumes:
      - name: config-volume
        secret:
          secretName: redis-config-file-9fdg29t689
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-signalenservice
  name: hhb-signalenservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-signalenservice
  template:
    metadata:
      labels:
        name: hhb-signalenservice
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: SIGNALENSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        - name: LOG_LEVEL
          value: INFO
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/signalenservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-signalenservice
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 400Mi
          requests:
            cpu: 50m
            memory: 400Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - while true; do sleep 1; echo Waiting for database...; if nc -z $POSTGRESQL_HOSTNAME
          $POSTGRESQL_PORT; then echo Database is up!; exit 0; fi; done; echo Aint
          gonna wait for the database forever...; exit 1
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: busybox
        name: init1-wait-for-db
      - args:
        - -c
        - export PGPASSWORD=$POSTGRESQL_PASSWORD && export PGPORT=$POSTGRESQL_PORT
          && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE USER
          $POSTGRESQL_USERNAME_SIGSVC WITH PASSWORD '$POSTGRESQL_PASSWORD_SIGSVC'"
          || true && psql -h $POSTGRESQL_HOSTNAME -U $POSTGRESQL_USERNAME -c "CREATE
          DATABASE $POSTGRESQL_DATABASE_NAME_SIGSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRESQL_DATABASE_NAME_SIGSVC
          TO $POSTGRESQL_USERNAME_SIGSVC" || true && psql -h $POSTGRESQL_HOSTNAME
          -U $POSTGRESQL_USERNAME -c "ALTER USER $POSTGRESQL_USERNAME_SIGSVC WITH
          PASSWORD '$POSTGRESQL_PASSWORD_SIGSVC'" || true;
        command:
        - /bin/sh
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: hhb-database-secrets-chmg6bh6bd
        - name: POSTGRESQL_PASSWORD_SIGSVC
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_SIGSVC
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: bitnami/postgresql:13
        imagePullPolicy: IfNotPresent
        name: init2-prepare-db
      - args:
        - run
        - db:deploy
        command:
        - npm
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: SIGNALENSERVICE_DATABASE_URL
              name: hhb-database-secrets-chmg6bh6bd
        envFrom:
        - configMapRef:
            name: postgres-config-9tfbt78852
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/signalenservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        name: init3-migrate-db
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-statsd-exporter
  name: hhb-statsd-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-statsd-exporter
  template:
    metadata:
      labels:
        name: hhb-statsd-exporter
    spec:
      containers:
      - image: prom/statsd-exporter:v0.24.0
        imagePullPolicy: IfNotPresent
        name: hhb-statsd-exporter
        ports:
        - containerPort: 9102
          name: metrics
          protocol: TCP
        - containerPort: 9125
          name: statsd
          protocol: UDP
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 128Mi
      nodeSelector:
        deployment: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: hhb-unleashservice
  name: hhb-unleashservice
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hhb-unleashservice
  template:
    metadata:
      labels:
        name: hhb-unleashservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: UNLEASH_URL
          value: https://gitlab.com/api/v4/feature_flags/unleash/20352213
        - name: UNLEASH_INSTANCEID
          value: JbZyPux6M7xwejsESy9L
        - name: UNLEASH_APPNAME
          value: huishoudboekje
        - name: UNLEASH_OTAP
          valueFrom:
            configMapKeyRef:
              key: UNLEASH_OTAP
              name: unleash-config-c7cg5bk6bk
        - name: LOG_LEVEL
          value: INFO
        image: registry.gitlab.com/commonground/huishoudboekje/app-new/unleashservice:1752-add-cypress-tests-to-pipeline-62dda8895
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        name: hhb-unleashservice
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          periodSeconds: 10
      nodeSelector:
        deployment: review
---
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    name: hhb-nightly-alarms-check
  name: hhb-nightly-alarms-check
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          containers:
          - command:
            - flask
            - alarms
            - evaluate
            env:
            - name: REQUIRE_AUTH
              value: "0"
            - name: HHB_SERVICE_URL
              value: http://hhb-huishoudboekjeservice
            - name: ORGANISATIE_SERVICE_URL
              value: http://hhb-organisatieservice
            - name: TRANSACTIE_SERVICE_URL
              value: http://hhb-banktransactieservice
            - name: GROOTBOEK_SERVICE_URL
              value: http://hhb-grootboekservice
            - name: LOG_SERVICE_URL
              value: http://hhb-logservice
            - name: POSTADRESSENSERVICE_URL
              value: http://hhb-postadressenservice
            - name: ALARMENSERVICE_URL
              value: http://hhb-alarmenservice
            - name: SIGNALENSERVICE_URL
              value: http://hhb-signalenservice
            - name: UNLEASHSERVICE_URL
              value: http://hhb-unleashservice
            image: registry.gitlab.com/commonground/huishoudboekje/app-new/backend:1752-add-cypress-tests-to-pipeline-62dda8895
            imagePullPolicy: IfNotPresent
            name: check-alarms
          restartPolicy: OnFailure
  schedule: 0 3 * * *
  startingDeadlineSeconds: 3600
  successfulJobsHistoryLimit: 1
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-alarmenservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-alarmenservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-authservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-authservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-backend
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-backend
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-banktransactieservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-banktransactieservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-database
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-database
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-database-mesh
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-database-mesh
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-frontend
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-frontend
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-grootboekservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-grootboekservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-huishoudboekjeservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-huishoudboekjeservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-logservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-logservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-organisatieservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-organisatieservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-postadressenservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-postadressenservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-prometheus
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-prometheus
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-rapportageservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-rapportageservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-signalenservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-signalenservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-statsd-exporter
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-statsd-exporter
  targetCPUUtilizationPercentage: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hhb-unleashservice
spec:
  maxReplicas: 1
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hhb-unleashservice
  targetCPUUtilizationPercentage: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
  labels:
    name: hhb-authservice-ingress
  name: hhb-authservice-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: huishoudboekje.example.com
    http:
      paths:
      - backend:
          service:
            name: hhb-authservice
            port:
              number: 80
        path: /auth
        pathType: Prefix
  tls:
  - hosts:
    - huishoudboekje.example.com
    secretName: hhb-development-ingress-tls-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
  labels:
    name: hhb-backend-ingress
  name: hhb-backend-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: huishoudboekje.example.com
    http:
      paths:
      - backend:
          service:
            name: hhb-backend
            port:
              number: 80
        path: /api
        pathType: Prefix
  tls:
  - hosts:
    - huishoudboekje.example.com
    secretName: hhb-development-ingress-tls-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
  labels:
    name: hhb-frontend-ingress
  name: hhb-frontend-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: huishoudboekje.example.com
    http:
      paths:
      - backend:
          service:
            name: hhb-frontend
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - huishoudboekje.example.com
    secretName: hhb-development-ingress-tls-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
  labels:
    name: hhb-unleashservice-ingress
  name: hhb-unleashservice-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: huishoudboekje.example.com
    http:
      paths:
      - backend:
          service:
            name: hhb-unleashservice
            port:
              number: 80
        path: /api/unleash
        pathType: Prefix
  tls:
  - hosts:
    - huishoudboekje.example.com
    secretName: hhb-development-ingress-tls-secret
